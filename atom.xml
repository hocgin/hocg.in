<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hocgin (๑`灬´๑)</title>
  <subtitle>Great minds have purpose, others have wishes.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hocg.in/"/>
  <updated>2017-10-18T08:40:59.000Z</updated>
  <id>https://hocg.in/</id>
  
  <author>
    <name>hocgin</name>
    <email>admin@hocg.in</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Thymeleaf 3.0 手册</title>
    <link href="https://hocg.in/2017/10/18/Thymeleaf-3.0-%E6%89%8B%E5%86%8C/"/>
    <id>https://hocg.in/2017/10/18/Thymeleaf-3.0-手册/</id>
    <published>2017-10-18T08:40:51.000Z</published>
    <updated>2017-10-18T08:40:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spring 官方推崇的模版引擎，遵循 HTML5规范。<br><a id="more"></a></p>
<h2 id="HTML5"><a href="#HTML5" class="headerlink" title="HTML5"></a>HTML5</h2><p>若要完全遵循HTML5规范，可使用 <code>data-th-*</code> 代替 <code>th:*</code>。</p>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><blockquote>
<p>TODO 以后补<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">th:fragment</div><div class="line">th:insert</div><div class="line">th:include</div><div class="line">th:replace</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="注释语法"><a href="#注释语法" class="headerlink" title="注释语法"></a>注释语法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--/* 这里是 编译器显示为注释, 浏览器不可见 */--&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--/*--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这里是 编译器显示不注释，浏览器不可见 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--*/--&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--/*/</span></div><div class="line"><span class="comment">&lt;div th:text="$&#123;'这里是 编辑器显示为注释, 浏览器可见'&#125;"&gt;...&lt;/div&gt;</span></div><div class="line"><span class="comment">/*/--&gt;</span></div></pre></td></tr></table></figure>
<h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h2><h3 id="URL-表达式"><a href="#URL-表达式" class="headerlink" title="URL 表达式"></a>URL 表达式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/img/tup.png&#125;"</span> <span class="attr">alt</span>=<span class="string">"绝对路径"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- &lt;img alt="绝对路径" src="/img/tup.png"&gt; --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">"@&#123;../img/tup.png&#125;"</span> <span class="attr">alt</span>=<span class="string">"相对路径"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- &lt;img alt="相对路径" src="../img/tup.png"&gt; --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">"@&#123;../img/tup.png(size=$&#123;100&#125;)&#125;"</span> <span class="attr">alt</span>=<span class="string">"带参数的路径"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- &lt;img alt="带参数的路径" src="../img/tup.png?size=100"&gt; --&gt;</span></div></pre></td></tr></table></figure>
<h3 id="国际化表达式"><a href="#国际化表达式" class="headerlink" title="国际化表达式"></a>国际化表达式</h3><ol>
<li><p>创建 <code>resources/messages_zh_CN.properties</code>, 其内容:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">message.error=错误</div></pre></td></tr></table></figure>
</li>
<li><p>配置 <code>application.yml</code> (使用 xml 的执行转换)</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  messages:</span></div><div class="line"><span class="attr">    basename:</span> <span class="string">messages_zh_CN</span></div></pre></td></tr></table></figure>
</li>
<li><p>使用</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">"#&#123;message.error&#125;"</span>&gt;</span>Error<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="变量表达式"><a href="#变量表达式" class="headerlink" title="变量表达式"></a>变量表达式</h3><blockquote>
<p>最基本的表达式, 类似于 EL 表达式。</p>
<ul>
<li>合 <code>org.springframework.ui.Model</code> 使用。</li>
<li>可以使用众多内置对象。</li>
<li>@访问 Spring 容器内对象</li>
</ul>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;author.name&#125;"</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="变量表达式-扩展-1"><a href="#变量表达式-扩展-1" class="headerlink" title="变量表达式 - 扩展 1"></a>变量表达式 - 扩展 1</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">th:object</span>=<span class="string">"$&#123;author&#125;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:text</span>=<span class="string">"*&#123;name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:text</span>=<span class="string">"*&#123;mail&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:text</span>=<span class="string">"*&#123;address&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!--</span></div><div class="line"><span class="comment">    等价于</span></div><div class="line"><span class="comment">    &lt;ul&gt;</span></div><div class="line"><span class="comment">        &lt;li th:text="$&#123;author.name&#125;"&gt;&lt;/li&gt;</span></div><div class="line"><span class="comment">        &lt;li th:text="$&#123;author.mail&#125;"&gt;&lt;/li&gt;</span></div><div class="line"><span class="comment">        &lt;li th:text="$&#123;author.address&#125;"&gt;&lt;/li&gt;</span></div><div class="line"><span class="comment">    &lt;/ul&gt;</span></div><div class="line"><span class="comment">--&gt;</span></div></pre></td></tr></table></figure>
<h3 id="变量表达式-扩展-2"><a href="#变量表达式-扩展-2" class="headerlink" title="变量表达式 - 扩展 2"></a>变量表达式 - 扩展 2</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">"$&#123;@demoService.getStr('hocgin')&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="预处理表达式"><a href="#预处理表达式" class="headerlink" title="预处理表达式"></a>预处理表达式</h3><ol>
<li><p>前置设置, Controller</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@GetMapping</span>(&#123;<span class="string">"/test.html"</span>&#125;)</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(Model model, @PathVariable String page)</span> </span>&#123;</div><div class="line">    model.addAttribute(<span class="string">"key"</span>, <span class="string">"error"</span>);</div><div class="line">    HashMap&lt;String, String&gt; vm = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">    vm.put(<span class="string">"error"</span>, <span class="string">"来自 $&#123;&#125; 表达式"</span>);</div><div class="line">    model.addAttribute(<span class="string">"obj"</span>, vm);</div><div class="line">    <span class="keyword">return</span> String.format(<span class="string">"test.html"</span>, page);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>前置设置, <code>messages_zh_CN.properties</code> 参考<strong>国际化表达式</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">message.error=错误</div></pre></td></tr></table></figure>
</li>
<li><p>test.html 编写</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/img/__$&#123;1+1&#125;__&#125;"</span>&gt;</span>连接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- &lt;a href="/img/2"&gt;连接&lt;/a&gt; --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">"#&#123;message.__$&#123;key&#125;__&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- &lt;div&gt;错误&lt;/div&gt; --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">"$&#123;obj.__$&#123;key&#125;__&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- &lt;div&gt;来自 $&#123;&#125; 表达式&lt;/div&gt; --&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="表达式语法"><a href="#表达式语法" class="headerlink" title="表达式语法"></a>表达式语法</h2><h3 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h3><p>使用 <code>+</code> 或者 <code>|..|</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"'1+1=' + $&#123;1+1&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 1+1=2 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"|1+1=$&#123;1+1&#125;|"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 1+1=2 --&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="运算符号"><a href="#运算符号" class="headerlink" title="运算符号"></a>运算符号</h3><p>使用 <code>+, -, *, /, %</code>。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"-((1+1-1)*2/2)%9"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- -1 --&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="与-或-非"><a href="#与-或-非" class="headerlink" title="与 或 非"></a>与 或 非</h3><p>使用 <code>and , or</code> 和 <code>! , not</code>。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"1==1 and true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- true --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"true and false"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- false --&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"true or false"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- true --&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"not true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- false --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"! false"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- true --&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="关系表达式"><a href="#关系表达式" class="headerlink" title="关系表达式"></a>关系表达式</h3><p>使用 <code>&gt;, &lt;, &gt;=, &lt;=, ==, !=</code>。<br>或者 <code>gt, lt, ge, le, eq, ne</code>。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"((1 &gt; 2 and 2 &lt; 3) or (2 &gt;= 2 and 2 &lt;= 5)) and (1 == 1 and 1 != 2)"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- true --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"((1 gt 2 and 2 lt 3) or (2 ge 2 and 2 le 5)) and (1 eq 1 and 1 ne 2)"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- true --&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="简单条件表达式"><a href="#简单条件表达式" class="headerlink" title="简单条件表达式"></a>简单条件表达式</h3><p>使用:<br>if-then <code>(if) ? (then)</code><br>if-then-else <code>(if) ? (then) : (else)</code><br>default <code>(value) ?: (defaultValue)</code>  </p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"true ? 'hocgin'"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- hocgin --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"false ? 'hocgin' : 'hocg.in'"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- hocg.in --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;iname&#125; ?: 'hocgin'"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- hocgin --&gt;</span></div></pre></td></tr></table></figure>
<h2 id="解析优先级"><a href="#解析优先级" class="headerlink" title="解析优先级"></a>解析优先级</h2><table>
<thead>
<tr>
<th>级别</th>
<th>描述</th>
<th>th属性</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>(Fragment inclusion)代码片段导入</td>
<td><code>th:insert</code>,<code>th:replace</code></td>
</tr>
<tr>
<td>2</td>
<td>(Fragment iteration)迭代</td>
<td><code>th:each</code></td>
</tr>
<tr>
<td>3</td>
<td>(Conditional evaluation)条件</td>
<td><code>th:if</code>,<code>th:unless</code>,<code>th:switch</code>,<code>th:case</code></td>
</tr>
<tr>
<td>4</td>
<td>(Local variable definition)局部变量</td>
<td><code>th:object</code>,<code>th:with</code></td>
</tr>
<tr>
<td>5</td>
<td>(General attribute modification)通用属性修改</td>
<td><code>th:attr</code>,<code>th:attrprepend</code>,<code>th:attrappend</code></td>
</tr>
<tr>
<td>6</td>
<td>(Specific attribute modification)具体属性修改</td>
<td><code>th:value</code>,<code>th:href</code>,<code>th:src</code> …</td>
</tr>
<tr>
<td>7</td>
<td>(Text tag body modification) 文本节点修改</td>
<td><code>th:text</code>,<code>th:utext</code></td>
</tr>
<tr>
<td>8</td>
<td>(Fragment specification) 代码段定义</td>
<td><code>th:fragment</code></td>
</tr>
<tr>
<td>9</td>
<td>(Fragment removal) 代码段删除</td>
<td><code>th:remove</code></td>
</tr>
</tbody>
</table>
<h2 id="基础对象"><a href="#基础对象" class="headerlink" title="基础对象"></a>基础对象</h2><h3 id="ctx-org-thymeleaf-spring4-context-SpringWebContext"><a href="#ctx-org-thymeleaf-spring4-context-SpringWebContext" class="headerlink" title="#ctx (org.thymeleaf.spring4.context.SpringWebContext)"></a><code>#ctx</code> (org.thymeleaf.spring4.context.SpringWebContext)</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * org.thymeleaf.context.IContext</span></div><div class="line"><span class="comment"> **/</span></div><div class="line"><span class="comment">// 当前语言环境(eg. en_US)。 等价于 &#123;#locale&#125;</span></div><div class="line">$&#123;#ctx.locale&#125;</div><div class="line"><span class="comment">// org.thymeleaf.context.VariablesMap 对象, 内部存储的是可用于当前上下文(Context)的对象。等价于 &#123;#vars&#125;</span></div><div class="line">$&#123;#ctx.variables&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * org.thymeleaf.context.IWebContext</span></div><div class="line"><span class="comment"> **/</span></div><div class="line">$&#123;#ctx.applicationAttributes&#125;</div><div class="line"><span class="comment">// 等价于 &#123;#httpServletRequest&#125;</span></div><div class="line">$&#123;#ctx.httpServletRequest&#125;</div><div class="line">$&#123;#ctx.httpServletResponse&#125;</div><div class="line"><span class="comment">// 等价于 &#123;#httpSession&#125;</span></div><div class="line">$&#123;#ctx.httpSession&#125;</div><div class="line">$&#123;#ctx.requestAttributes&#125;</div><div class="line">$&#123;#ctx.requestParameters&#125;</div><div class="line">$&#123;#ctx.servletContext&#125;</div><div class="line">$&#123;#ctx.sessionAttributes&#125;</div></pre></td></tr></table></figure>
<h3 id="param-org-apache-catalina-util-ParameterMap"><a href="#param-org-apache-catalina-util-ParameterMap" class="headerlink" title="param (org.apache.catalina.util.ParameterMap)"></a><code>param</code> (org.apache.catalina.util.ParameterMap)</h3><p>包含当前页面的请求的参数(eg. <code>http://localhost:8080/admin/test.html?name=hocgin</code>)。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 返回对象</span></div><div class="line">$&#123;param.name&#125; </div><div class="line"><span class="comment">// 获得值: hocgin</span></div><div class="line">$&#123;param.name[<span class="number">0</span>]&#125; </div><div class="line">$&#123;param.size()&#125;</div><div class="line">$&#123;param.isEmpty()&#125;</div><div class="line">$&#123;param.containsKey(<span class="string">'name'</span>)&#125;</div></pre></td></tr></table></figure></p>
<h3 id="session-org-thymeleaf-context-WebSessionVariablesMap"><a href="#session-org-thymeleaf-context-WebSessionVariablesMap" class="headerlink" title="session (org.thymeleaf.context.WebSessionVariablesMap)"></a><code>session</code> (org.thymeleaf.context.WebSessionVariablesMap)</h3><p>从 Session 获取内容。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获得值: hocgin</span></div><div class="line">$&#123;session.name&#125;</div><div class="line">$&#123;session.size()&#125;</div><div class="line">$&#123;session.isEmpty()&#125;</div><div class="line">$&#123;session.containsKey(<span class="string">'name'</span>)&#125;</div></pre></td></tr></table></figure></p>
<h3 id="httpServletRequest-org-apache-catalina-connector-RequestFacade"><a href="#httpServletRequest-org-apache-catalina-connector-RequestFacade" class="headerlink" title="#httpServletRequest (org.apache.catalina.connector.RequestFacade)"></a><code>#httpServletRequest</code> (org.apache.catalina.connector.RequestFacade)</h3><h3 id="themes-org-thymeleaf-spring4-expression-Themes"><a href="#themes-org-thymeleaf-spring4-expression-Themes" class="headerlink" title="#themes (org.thymeleaf.spring4.expression.Themes)"></a><code>#themes</code> (org.thymeleaf.spring4.expression.Themes)</h3><h3 id="application"><a href="#application" class="headerlink" title="application"></a><code>application</code></h3><h3 id="dates-org-thymeleaf-expression-Dates"><a href="#dates-org-thymeleaf-expression-Dates" class="headerlink" title="#dates (org.thymeleaf.expression.Dates)"></a><code>#dates</code> (org.thymeleaf.expression.Dates)</h3><h3 id="calendars-org-thymeleaf-expression-Calendars"><a href="#calendars-org-thymeleaf-expression-Calendars" class="headerlink" title="#calendars (org.thymeleaf.expression.Calendars)"></a><code>#calendars</code> (org.thymeleaf.expression.Calendars)</h3><h3 id="numbers-org-thymeleaf-expression-Numbers"><a href="#numbers-org-thymeleaf-expression-Numbers" class="headerlink" title="#numbers (org.thymeleaf.expression.Numbers)"></a><code>#numbers</code> (org.thymeleaf.expression.Numbers)</h3><h3 id="strings-org-thymeleaf-expression-Strings"><a href="#strings-org-thymeleaf-expression-Strings" class="headerlink" title="#strings (org.thymeleaf.expression.Strings)"></a><code>#strings</code> (org.thymeleaf.expression.Strings)</h3><h3 id="objects-org-thymeleaf-expression-Objects"><a href="#objects-org-thymeleaf-expression-Objects" class="headerlink" title="#objects (org.thymeleaf.expression.Objects)"></a><code>#objects</code> (org.thymeleaf.expression.Objects)</h3><h3 id="bools-org-thymeleaf-expression-Bools"><a href="#bools-org-thymeleaf-expression-Bools" class="headerlink" title="#bools (org.thymeleaf.expression.Bools)"></a><code>#bools</code> (org.thymeleaf.expression.Bools)</h3><h3 id="arrays-org-thymeleaf-expression-Arrays"><a href="#arrays-org-thymeleaf-expression-Arrays" class="headerlink" title="#arrays (org.thymeleaf.expression.Arrays)"></a><code>#arrays</code> (org.thymeleaf.expression.Arrays)</h3><h3 id="lists-org-thymeleaf-expression-Lists"><a href="#lists-org-thymeleaf-expression-Lists" class="headerlink" title="#lists (org.thymeleaf.expression.Lists)"></a><code>#lists</code> (org.thymeleaf.expression.Lists)</h3><h3 id="sets-org-thymeleaf-expression-Sets"><a href="#sets-org-thymeleaf-expression-Sets" class="headerlink" title="#sets (org.thymeleaf.expression.Sets)"></a><code>#sets</code> (org.thymeleaf.expression.Sets)</h3><h3 id="maps-org-thymeleaf-expression-Maps"><a href="#maps-org-thymeleaf-expression-Maps" class="headerlink" title="#maps (org.thymeleaf.expression.Maps)"></a><code>#maps</code> (org.thymeleaf.expression.Maps)</h3><h3 id="aggregates-org-thymeleaf-expression-Aggregates"><a href="#aggregates-org-thymeleaf-expression-Aggregates" class="headerlink" title="#aggregates (org.thymeleaf.expression.Aggregates)"></a><code>#aggregates</code> (org.thymeleaf.expression.Aggregates)</h3><h3 id="messages-org-thymeleaf-expression-Messages"><a href="#messages-org-thymeleaf-expression-Messages" class="headerlink" title="#messages (org.thymeleaf.expression.Messages)"></a><code>#messages</code> (org.thymeleaf.expression.Messages)</h3><h3 id="ids-org-thymeleaf-expression-Ids"><a href="#ids-org-thymeleaf-expression-Ids" class="headerlink" title="#ids (org.thymeleaf.expression.Ids)"></a><code>#ids</code> (org.thymeleaf.expression.Ids)</h3><p><strong>代码示例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">### `#locale` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#locale&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#ctx` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#ctx&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#vars` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#vars&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"></div><div class="line">### `param` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;param&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `application` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;application&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `session` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;session&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#httpSession` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#httpSession&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#httpServletRequest` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#httpServletRequest&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"></div><div class="line">### `#themes` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#themes&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#dates` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#dates&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#calendars` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#calendars&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#numbers` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#numbers&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#strings` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#strings&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#objects` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#objects&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#bools` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#bools&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#arrays` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#arrays&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#lists` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#lists&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#sets` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#sets&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#maps` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#maps&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#aggregates` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#aggregates&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#messages` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#messages&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">### `#ids` (<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;#ids&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;<span class="name">br</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h2><ul>
<li>在 <code>thymeleaf</code> 中使用 Spring 容器内的单例.</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">"$&#123;@demoService.getStr('hocgin')&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>引入模版片段<br><strong>XPath</strong><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:include</span>=<span class="string">"mytemplate :: [//div[@class='content']]"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>CSS</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:include</span>=<span class="string">"mytemplate :: [div.content]"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<ul>
<li>引入公有片段(JS 或 CSS)<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">css</span> <span class="attr">th:replace</span>=<span class="string">"mytemplate :: common-css"</span>&gt;</span><span class="tag">&lt;/<span class="name">css</span>&gt;</span></div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring 官方推崇的模版引擎，遵循 HTML5规范。&lt;br&gt;
    
    </summary>
    
      <category term="Server" scheme="https://hocg.in/categories/Server/"/>
    
    
      <category term="HTML5" scheme="https://hocg.in/tags/HTML5/"/>
    
      <category term="Thymeleaf" scheme="https://hocg.in/tags/Thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>解决 WebView 点击时网页不断闪耀</title>
    <link href="https://hocg.in/2017/09/28/%E8%A7%A3%E5%86%B3WebView%E7%82%B9%E5%87%BB%E6%97%B6%E7%BD%91%E9%A1%B5%E4%B8%8D%E6%96%AD%E9%97%AA%E8%80%80/"/>
    <id>https://hocg.in/2017/09/28/解决WebView点击时网页不断闪耀/</id>
    <published>2017-09-28T13:47:21.000Z</published>
    <updated>2017-09-28T14:14:54.743Z</updated>
    
    <content type="html"><![CDATA[<p>解决高版本 WebView 点击时网页不断闪耀的问题 🤗<br><a id="more"></a></p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>网页渲染开启了硬件加速，如果你也出现了该问题，可以尝试关闭硬件加速。  </p>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>方案一: 在xml中使用<code>android:layerType=&quot;software&quot;</code>进行关闭。<strong>推荐</strong><br>方案二: 通过 java 代码<code>webView.setLayerType(View.LAYER_TYPE_SOFTWARE, null);</code>进行关闭。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/hocgin/BroswerKit/blob/master/app/src/main/res/layout/activity_browser.xml#L40-L53" target="_blank" rel="external">BroswerKit</a>进行标记的这段代码解决了我的闪耀问题</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解决高版本 WebView 点击时网页不断闪耀的问题 🤗&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="https://hocg.in/categories/Android/"/>
    
    
      <category term="Android" scheme="https://hocg.in/tags/Android/"/>
    
      <category term="问题" scheme="https://hocg.in/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>解决 ProgressBar 上下出现空白现象</title>
    <link href="https://hocg.in/2017/09/27/%E8%A7%A3%E5%86%B3ProgressBar%E9%A1%B6%E9%83%A8%E5%87%BA%E7%8E%B0%E7%A9%BA%E7%99%BD%E7%8E%B0%E8%B1%A1/"/>
    <id>https://hocg.in/2017/09/27/解决ProgressBar顶部出现空白现象/</id>
    <published>2017-09-27T02:27:22.000Z</published>
    <updated>2017-09-28T14:15:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>解决 ProgressBar 上下出现空白现象 🤠<br><a id="more"></a></p>
<h2 id="出现问题"><a href="#出现问题" class="headerlink" title="出现问题"></a>出现问题</h2><p>一般情况我们使用如下代码来创建<code>ProgressBar</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ProgressBar</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/progressBar"</span></span></div><div class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleHorizontal"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#fff"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:max</span>=<span class="string">"100"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:indeterminate</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</span></div></pre></td></tr></table></figure></p>
<p>那么将会出现如下情况:<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-28%2021.58.00.png" alt="出现空白间隔问题"></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>通过变更<code>android:layout_marginBottom</code>和<code>android:layout_marginTop</code>在结合<code>android:background</code>设置为透明来处理这个问题:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ProgressBar</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/progressBar"</span></span></div><div class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleHorizontal"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_marginBottom</span>=<span class="string">"-7dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"-7dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#00ffffff"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:max</span>=<span class="string">"100"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:indeterminate</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</span></div></pre></td></tr></table></figure></p>
<p>以下是处理后的结果<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-28%2022.03.46.png" alt="解决问题后"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解决 ProgressBar 上下出现空白现象 🤠&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="https://hocg.in/categories/Android/"/>
    
    
      <category term="Android" scheme="https://hocg.in/tags/Android/"/>
    
      <category term="问题" scheme="https://hocg.in/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>OpenWrt 入门篇</title>
    <link href="https://hocg.in/2017/09/18/OpenWrt-%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>https://hocg.in/2017/09/18/OpenWrt-入门篇/</id>
    <published>2017-09-18T06:32:26.000Z</published>
    <updated>2017-09-18T09:00:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天刚好重刷 OpenWrt 固件，整理整理<br><a id="more"></a></p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://www.wikiwand.com/zh/OpenWrt" target="_blank" rel="external">什么是 OpenWrt?</a></p>
<h2 id="关于支持-OpenWrt-的路由器"><a href="#关于支持-OpenWrt-的路由器" class="headerlink" title="关于支持 OpenWrt 的路由器"></a>关于支持 OpenWrt 的路由器</h2><p>可以去 <a href="https://wiki.openwrt.org/toh/start" target="_blank" rel="external">支持 OpenWrt 的路由器列表</a> 查看支持的路由器, 了解其 <strong>CPU型号(既芯片型号)</strong> <strong>RAM容量</strong> <strong>Flash容量</strong></p>
<h2 id="关于-OpenWrt-固件的下载"><a href="#关于-OpenWrt-固件的下载" class="headerlink" title="关于 OpenWrt 固件的下载"></a>关于 OpenWrt 固件的下载</h2><p><a href="https://downloads.openwrt.org" target="_blank" rel="external">OpenWrt 官方下载固件地址</a><br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-18%2012.12.12.png" alt="image"><br><strong>关于下载地址格式:</strong></p>
<p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-18%2012.26.38.png" alt="image"></p>
<p><strong>关于固件类型</strong></p>
<ul>
<li>后缀为<code>factory</code>是用于从原厂固件刷为 OpenWrt。</li>
<li>后缀为<code>sysupgrade</code>是用于从 OpenWrt 更新 OpenWrt。</li>
</ul>
<h2 id="原厂刷-OpenWrt-固件"><a href="#原厂刷-OpenWrt-固件" class="headerlink" title="原厂刷 OpenWrt 固件"></a>原厂刷 OpenWrt 固件</h2><blockquote>
<p>待补充</p>
</blockquote>
<h2 id="网页界面-OpenWrt-备份-amp-升级固件"><a href="#网页界面-OpenWrt-备份-amp-升级固件" class="headerlink" title="网页界面 OpenWrt 备份 &amp; 升级固件"></a>网页界面 OpenWrt 备份 &amp; 升级固件</h2><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-18%2012.50.34.png" alt="image"><br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/屏幕快照%202017-09-18%2012.57.13.png" alt="image"></p>
<h2 id="OpenWrt-安全模式"><a href="#OpenWrt-安全模式" class="headerlink" title="OpenWrt 安全模式"></a>OpenWrt 安全模式</h2><blockquote>
<p>当我们无法进入网页界面，可以使用<strong>安全模式</strong>管理恢复固件<br><strong>必须使用有线电缆进行连接。</strong><br>环境: Linux or macOS</p>
</blockquote>
<p>进入OpenWrt安全模式的方法：</p>
<ol>
<li>使用网线连接电脑和路由器</li>
<li>设置电脑网卡<br>IP 地址:<code>192.168.1.x</code>(x为2至255)<br>子网掩码:<code>255.255.255.0</code></li>
<li><p>打开终端运行命令</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 注, 此处 eth0 为网卡. 可使用 ifconfig 进行查看</div><div class="line">sudo tcpdump -Ani eth0 port 4919 and udp</div></pre></td></tr></table></figure>
</li>
<li><p>断电重启</p>
</li>
<li><p>打开终端运行命令</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">telnet 192.168.1.1</div></pre></td></tr></table></figure>
</li>
<li><p>执行指令, 例如</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 重置系统</div><div class="line">firstboot</div><div class="line"><span class="meta">#</span> 重置密码</div><div class="line">passwd</div></pre></td></tr></table></figure>
</li>
<li><p>重启路由器</p>
</li>
</ol>
<h2 id="不死-U-Boot"><a href="#不死-U-Boot" class="headerlink" title="不死 U-Boot"></a>不死 U-Boot</h2><blockquote>
<p>待补充</p>
</blockquote>
<h2 id="网页界面-OpenWrt-宽带拨号设置"><a href="#网页界面-OpenWrt-宽带拨号设置" class="headerlink" title="网页界面 OpenWrt 宽带拨号设置"></a>网页界面 OpenWrt 宽带拨号设置</h2><ol>
<li><p>进入接口设置界面</p>
</li>
<li><p>进行 WAN 口编辑<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-18%2013.37.35.png" alt="image"></p>
</li>
<li><p>填写宽带账号 &amp; 密码<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-18%2013.45.42.png" alt="image"></p>
</li>
<li><p>此时电脑连接 LAN 口的话，即可进行上网。</p>
</li>
</ol>
<h2 id="WiFi-设置"><a href="#WiFi-设置" class="headerlink" title="WiFi 设置"></a>WiFi 设置</h2><ol>
<li>进入 WiFi 设置界面，此处为双网卡<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-18%2013.53.43.png" alt="image"></li>
<li>开启WiFi<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-18%2014.00.00.png" alt="image"></li>
<li>设置WiFi<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-18%2014.26.04.png" alt="image"></li>
</ol>
<hr>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="什么是WAN口？什么是LAN口？"><a href="#什么是WAN口？什么是LAN口？" class="headerlink" title="什么是WAN口？什么是LAN口？"></a>什么是WAN口？什么是LAN口？</h3><blockquote>
<p>路由器通常有多个LAN口，一个WAN口</p>
</blockquote>
<ul>
<li>WAN<blockquote>
<p>广域网（WAN、公网、外网）</p>
</blockquote>
</li>
</ul>
<p>设置拨号上网连接互联网</p>
<ul>
<li>LAN<blockquote>
<p>局域网（LAN、私网、内网)</p>
</blockquote>
</li>
</ul>
<p>连接本地计算机</p>
<h3 id="PPPoE"><a href="#PPPoE" class="headerlink" title="PPPoE"></a>PPPoE</h3><blockquote>
<p>以太网上的点对点协议中的一种, 宽带接入方式ADSL 就使用了PPPoE协议</p>
</blockquote>
<h3 id="关于-WiFi-2-4G-和-5G"><a href="#关于-WiFi-2-4G-和-5G" class="headerlink" title="关于 WiFi 2.4G 和 5G"></a>关于 WiFi 2.4G 和 5G</h3><p><code>802.11n/b/g</code> 主要工作频段为2.4GHz<br><code>802.11a/ac</code> 主要工作频段为5GHz</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天刚好重刷 OpenWrt 固件，整理整理&lt;br&gt;
    
    </summary>
    
      <category term="OpenWrt" scheme="https://hocg.in/categories/OpenWrt/"/>
    
    
      <category term="Tips" scheme="https://hocg.in/tags/Tips/"/>
    
      <category term="OpenWrt" scheme="https://hocg.in/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>关于 Android Studio 启动 Android 模拟器失败问题</title>
    <link href="https://hocg.in/2017/07/02/%E5%85%B3%E4%BA%8EAndroid%20Studio%20%E5%90%AF%E5%8A%A8Android%E6%A8%A1%E6%8B%9F%E5%99%A8%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/"/>
    <id>https://hocg.in/2017/07/02/关于Android Studio 启动Android模拟器失败问题/</id>
    <published>2017-07-02T13:07:00.000Z</published>
    <updated>2017-07-02T13:07:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>Android Studio 启动虚拟机一直闪退，不显示任何报错信息</p>
<a id="more"></a>
<h2 id="排查问题"><a href="#排查问题" class="headerlink" title="排查问题"></a>排查问题</h2><ol>
<li>尝试用命令启动模拟器, 方便查看其错误日志<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 查看你创建的设备</div><div class="line">emulator -list-avds</div><div class="line"><span class="meta">#</span> 启动命令</div><div class="line">emulator -netdelay none -netspeed full -avd New_Device_API_2</div><div class="line"><span class="meta">#</span> 以下为报错日志</div><div class="line">Hax is enabled</div><div class="line">Hax ram_size 0x60000000</div><div class="line">HAX is working and emulator runs in fast virt mode.</div><div class="line">Failed to sync vcpu reg</div><div class="line">Failed to sync vcpu reg</div><div class="line">Failed to sync vcpu reg</div><div class="line">Failed to sync vcpu reg</div><div class="line">Failed to sync vcpu reg</div><div class="line">Failed to sync HAX vcpu contextInternal error: Initial hax sync failed</div></pre></td></tr></table></figure>
</li>
</ol>
<p>vcpu无法进行同步?? What??<br>尝试进行了 Google，<a href="https://stackoverflow.com/questions/17024538/how-do-i-fix-failed-to-sync-vcpu-reg-error/17024645" target="_blank" rel="external">How do I fix “Failed to sync vcpu reg” error?
</a><br>好吧, docker 之类的虚拟机引起了冲突</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>关掉用不着的虚拟机如 docker ..</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;Android Studio 启动虚拟机一直闪退，不显示任何报错信息&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="https://hocg.in/categories/Android/"/>
    
    
      <category term="Android" scheme="https://hocg.in/tags/Android/"/>
    
      <category term="Mac" scheme="https://hocg.in/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Google 使用技巧</title>
    <link href="https://hocg.in/2017/06/18/Google-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://hocg.in/2017/06/18/Google-使用技巧/</id>
    <published>2017-06-18T03:24:06.000Z</published>
    <updated>2017-09-20T14:27:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>摩擦 Google 利器。</p>
<a id="more"></a>
<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>使用 <a href="https://www.google.com/ncr" target="_blank" rel="external">https://www.google.com/ncr</a> 模式并且是<code>英文版</code>。</p>
<h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><h3 id="双引号"><a href="#双引号" class="headerlink" title="双引号"></a>双引号</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2011.44.17.png" alt="image"></p>
<blockquote>
<p><strong>完全匹配搜索</strong></p>
</blockquote>
<h3 id="减号"><a href="#减号" class="headerlink" title="减号"></a>减号</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2011.46.03.png" alt="image"></p>
<blockquote>
<p>使用这个指令时减号前面必须是空格，减号后面没有空格，紧跟着需要<strong>排除特定的词</strong>。</p>
</blockquote>
<h3 id="星号"><a href="#星号" class="headerlink" title="星号"></a>星号</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2011.52.27.png" alt="image"></p>
<blockquote>
<p><em>号代表任何文字，即<em>*模糊搜索</em></em></p>
</blockquote>
<h3 id="～"><a href="#～" class="headerlink" title="～"></a>～</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.40.20.png" alt="image"></p>
<blockquote>
<p>匹配 <strong>该关键词 或 该关键词的同义词</strong></p>
</blockquote>
<h3 id="OR"><a href="#OR" class="headerlink" title="OR"></a>OR</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.35.15.png" alt="image"></p>
<blockquote>
<p>匹配关键词<code>hocgin</code>或者<code>hocg.in</code></p>
</blockquote>
<h3 id=""><a href="#" class="headerlink" title="+"></a>+</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.37.40.png" alt="image"></p>
<blockquote>
<p>匹配关键词<code>hocgin</code>与<code>hocg.in</code>同时存在</p>
</blockquote>
<h3 id="inurl"><a href="#inurl" class="headerlink" title="inurl"></a>inurl</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2011.58.08.png" alt="image"></p>
<blockquote>
<p>匹配<strong>url连接中包含该词汇</strong>，例如上方匹配 https://hocg.in/hocgin</p>
</blockquote>
<h3 id="allinurl"><a href="#allinurl" class="headerlink" title="allinurl"></a>allinurl</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.21.25.png" alt="image"></p>
<blockquote>
<p>等价于: <code>inurl: hocgin inurl: hocg.in</code><br>匹配<strong>url连接中既包含<code>hocgin</code>也包含<code>hocg.in</code></strong>, 例如: https://hocg.in/hocgin</p>
</blockquote>
<h3 id="inanchor"><a href="#inanchor" class="headerlink" title="inanchor"></a>inanchor</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.10.13.png" alt="image"></p>
<blockquote>
<p>匹配<strong>a标签中的文字</strong>, 例如上方匹配 \<a href="https://hocg.in">hocgin\</a></p>
</blockquote>
<h3 id="intitle"><a href="#intitle" class="headerlink" title="intitle"></a>intitle</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.12.39.png" alt="image"></p>
<blockquote>
<p>匹配<strong>title标签中的文字</strong>, \<title>hocgin\</title></p>
</blockquote>
<h3 id="allintitle"><a href="#allintitle" class="headerlink" title="allintitle"></a>allintitle</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.17.18.png" alt="image"></p>
<blockquote>
<p>等价于: <code>intitle: hocgin intitle: hocg.in</code><br>匹配<strong>标题中既包含<code>hocgin</code>也包含<code>hocg.in</code></strong>,例如: \<title>hocgin 的博客地址 hocg.in\</title></p>
</blockquote>
<h3 id="filetype"><a href="#filetype" class="headerlink" title="filetype"></a>filetype</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.24.45.png" alt="image"></p>
<blockquote>
<p>匹配<strong>包含关键词<code>hocgin</code>的所有pdf文件</strong></p>
</blockquote>
<h3 id="site"><a href="#site" class="headerlink" title="site"></a>site</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.26.38.png" alt="image"></p>
<blockquote>
<p><strong>某个域名的搜索</strong></p>
</blockquote>
<h3 id="ralated"><a href="#ralated" class="headerlink" title="ralated"></a>ralated</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.36.45.png" alt="image"></p>
<blockquote>
<p>返回 Google 人为相关的页面</p>
</blockquote>
<p><strong>混合使用示例</strong><br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.43.18.png" alt="image"><br><a href="">图片来源</a></p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="查询字词的释义"><a href="#查询字词的释义" class="headerlink" title="查询字词的释义"></a>查询字词的释义</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.50.27.png" alt="image"></p>
<h3 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.51.30.png" alt="image"></p>
<h3 id="天气查询"><a href="#天气查询" class="headerlink" title="天气查询"></a>天气查询</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.52.39.png" alt="image"></p>
<h3 id="当前时间"><a href="#当前时间" class="headerlink" title="当前时间"></a>当前时间</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.57.12.png" alt="image"></p>
<h3 id="日出"><a href="#日出" class="headerlink" title="日出"></a>日出</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.58.31.png" alt="image"></p>
<h3 id="日落"><a href="#日落" class="headerlink" title="日落"></a>日落</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2012.59.30.png" alt="image"></p>
<h3 id="音乐人搜索"><a href="#音乐人搜索" class="headerlink" title="音乐人搜索"></a>音乐人搜索</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.02.27.png" alt="image"></p>
<h3 id="省会"><a href="#省会" class="headerlink" title="省会"></a>省会</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.04.05.png" alt="image"></p>
<h3 id="汇率"><a href="#汇率" class="headerlink" title="汇率"></a>汇率</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.08.03.png" alt="image"></p>
<blockquote>
<p>200美元换多少人民币，可以进行数学运算</p>
</blockquote>
<h3 id="设置计时器"><a href="#设置计时器" class="headerlink" title="设置计时器"></a>设置计时器</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.09.39.png" alt="image"></p>
<blockquote>
<p>Set timer XX seconds/minutes/hours，XX表示具体的数字。</p>
</blockquote>
<h3 id="两地点距离计算"><a href="#两地点距离计算" class="headerlink" title="两地点距离计算"></a>两地点距离计算</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.11.53.png" alt="image"></p>
<h3 id="当前位置"><a href="#当前位置" class="headerlink" title="当前位置"></a>当前位置</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.14.44.png" alt="image"></p>
<h3 id="显示当前电脑IP"><a href="#显示当前电脑IP" class="headerlink" title="显示当前电脑IP"></a>显示当前电脑IP</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.23.04.png" alt="image"></p>
<h3 id="显示国家-GDP"><a href="#显示国家-GDP" class="headerlink" title="显示国家 GDP"></a>显示国家 GDP</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.25.31.png" alt="image"></p>
<h3 id="绘制多元方程以及复杂的方程式"><a href="#绘制多元方程以及复杂的方程式" class="headerlink" title="绘制多元方程以及复杂的方程式"></a>绘制多元方程以及复杂的方程式</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.27.12.png" alt="image"></p>
<blockquote>
<p>graph + 方程式</p>
</blockquote>
<h3 id="搜索某个单词的由来"><a href="#搜索某个单词的由来" class="headerlink" title="搜索某个单词的由来"></a>搜索某个单词的由来</h3><p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-19%2013.31.02.png" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摩擦 Google 利器。&lt;/p&gt;
    
    </summary>
    
      <category term="Other" scheme="https://hocg.in/categories/Other/"/>
    
    
      <category term="Tips" scheme="https://hocg.in/tags/Tips/"/>
    
      <category term="Google" scheme="https://hocg.in/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>字符串编码篇</title>
    <link href="https://hocg.in/2017/05/12/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E7%A0%81%E7%AF%87/"/>
    <id>https://hocg.in/2017/05/12/字符串编码篇/</id>
    <published>2017-05-12T13:09:03.000Z</published>
    <updated>2017-08-25T10:09:51.000Z</updated>
    
    <content type="html"><![CDATA[<p> 字符编码的来历..<br><a id="more"></a></p>
<h2 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h2><blockquote>
<p>最早只有127个字符被编码到计算机里，也就是大小写英文字母、数字和一些符号</p>
<ul>
<li>占位: 1个字节</li>
</ul>
</blockquote>
<h2 id="GB2312"><a href="#GB2312" class="headerlink" title="GB2312"></a>GB2312</h2><blockquote>
<p>中文显然一个字节是不够的，至少需要两个字节，而且还不能和ASCII编码冲突</p>
</blockquote>
<h2 id="Unicode-u-16进制"><a href="#Unicode-u-16进制" class="headerlink" title="Unicode \u[16进制]"></a>Unicode <code>\u[16进制]</code></h2><blockquote>
<p>Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。</p>
<ul>
<li>占位: 通常是2个字节</li>
</ul>
</blockquote>
<h2 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h2><blockquote>
<p>本着节约的精神，又出现了把Unicode编码转化为“可变长编码”<br><strong>Note:</strong> UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 字符编码的来历..&lt;br&gt;
    
    </summary>
    
      <category term="Other" scheme="https://hocg.in/categories/Other/"/>
    
    
      <category term="Tips" scheme="https://hocg.in/tags/Tips/"/>
    
  </entry>
  
  <entry>
    <title>Wireshark 的使用</title>
    <link href="https://hocg.in/2017/04/20/Wireshark%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://hocg.in/2017/04/20/Wireshark的使用/</id>
    <published>2017-04-20T11:34:05.000Z</published>
    <updated>2017-08-24T10:08:02.000Z</updated>
    
    <content type="html"><![CDATA[<p> 抽空整理一下, 虽然<code>Charles</code>很好用, 但是某些情况下该软件也是不可替代的.<br><a id="more"></a><br><!-- ## 参考
[WireShark](http://www.cnblogs.com/TankXiao/archive/2012/10/10/2711777.html) --></p>
<h3 id="关于Wireshark"><a href="#关于Wireshark" class="headerlink" title="关于Wireshark"></a>关于Wireshark</h3><p>适合研究 TCP,UDP 等协议. <strong>因为限制并不能改包或模拟发包，只能分析协议</strong><br>若, 研究HTTP,HTTPS推荐使用<code>Charles</code> or <code>Fiddler</code></p>
<h3 id="关于抓包五颜六色的意义"><a href="#关于抓包五颜六色的意义" class="headerlink" title="关于抓包五颜六色的意义"></a>关于抓包五颜六色的意义</h3><blockquote>
<p>更多详情查看 View - Coloring Rules</p>
</blockquote>
<ul>
<li>绿色背景（黑字）<code>HTTP包</code></li>
<li>灰色背景（黑字）<code>TCP包</code></li>
<li>蓝色背景 (黑字)  <code>DNS包</code></li>
<li>黑色背景 (红字)  <code>TCP错误包或者校验错误包</code></li>
</ul>
<h3 id="Wireshark主窗口"><a href="#Wireshark主窗口" class="headerlink" title="Wireshark主窗口"></a>Wireshark主窗口</h3><blockquote>
<p>从上至下</p>
</blockquote>
<p><img src="https://cloud.githubusercontent.com/assets/16535610/21889866/01695500-d906-11e6-8ddb-c82c20967ae0.png" alt="img"></p>
<ul>
<li>菜单栏: 用于开始操作。</li>
<li>主工具栏: 提供快速访问菜单中经常用到的项目的功能。</li>
<li>过滤工具栏: 提供处理当前显示过滤得方法。</li>
<li>拦截的数据包列表(Packet list): 显示打开文件的每个包的摘要。点击面板中的单独条目，包的其他情况将会显示在另外两个面板中。</li>
<li>选中的数据包信息(Packet details): 显示您在Packet list面板中选择的包的更多详情。</li>
<li>选中的数据包字节码: 显示您在Packet list面板选择的包的数据，以及在Packet details面板高亮显示的字段。</li>
<li>状态栏: 显示当前程序状态以及捕捉数据的更多详情。</li>
</ul>
<p><strong>选中的数据包信息</strong></p>
<ul>
<li>Frame: 物理层的数据帧概况</li>
<li>Ethernet II: 数据链路层以太网帧头部信息</li>
<li>Internet Protocol Version 4: 互联网层IP包头部信息</li>
<li>Transmission Control Protocol:  传输层T的数据段头部信息，此处是TCP</li>
<li>Hypertext Transfer Protocol:  应用层的信息，此处是HTTP协议</li>
</ul>
<h3 id="过滤表达式"><a href="#过滤表达式" class="headerlink" title="过滤表达式"></a>过滤表达式</h3><ul>
<li><p>协议过滤</p>
<blockquote>
<p>tcp upd ..</p>
</blockquote>
</li>
<li><p>ip 过滤</p>
<blockquote>
<p><code>来源</code> ip.src == 192.168.1.1<br><code>目的地</code> ip.dst == 192.168.1.1</p>
</blockquote>
</li>
<li><p>端口</p>
<blockquote>
<p>tcp.port == 8080<br><code>仅显示来源为8080的</code> tcp.srcport == 8080</p>
</blockquote>
</li>
<li><p>Http模式</p>
<blockquote>
<p>http.request.method==”GET”</p>
</blockquote>
</li>
<li><p>逻辑运算符为 <code>and</code> <code>or</code></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 抽空整理一下, 虽然&lt;code&gt;Charles&lt;/code&gt;很好用, 但是某些情况下该软件也是不可替代的.&lt;br&gt;
    
    </summary>
    
      <category term="IDE" scheme="https://hocg.in/categories/IDE/"/>
    
    
      <category term="Tips" scheme="https://hocg.in/tags/Tips/"/>
    
      <category term="Wireshark" scheme="https://hocg.in/tags/Wireshark/"/>
    
  </entry>
  
  <entry>
    <title>SQL的重新梳理</title>
    <link href="https://hocg.in/2017/04/07/SQL%E9%87%8D%E6%96%B0%E6%A2%B3%E7%90%86/"/>
    <id>https://hocg.in/2017/04/07/SQL重新梳理/</id>
    <published>2017-04-07T01:19:09.000Z</published>
    <updated>2017-08-24T09:48:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>持续积累..<br><a id="more"></a></p>
<h2 id="关于-SQL-执行顺序"><a href="#关于-SQL-执行顺序" class="headerlink" title="关于 SQL 执行顺序"></a>关于 SQL 执行顺序</h2><h3 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h3><p><a href="http://www.uol123.com/2013/01/26/sql%E8%AF%AD%E5%8F%A5%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html" target="_blank" rel="external">参考</a></p>
<h3 id="例句"><a href="#例句" class="headerlink" title="例句"></a>例句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t_1 <span class="keyword">join</span> t_2</div><div class="line"><span class="keyword">on</span> t_1.id = t_2.fid</div><div class="line"><span class="keyword">where</span> <span class="number">1</span>=<span class="number">1</span></div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> t_1.className</div><div class="line"><span class="keyword">having</span> t_1.className = <span class="string">'1班'</span></div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">desc</span>;</div></pre></td></tr></table></figure>
<blockquote>
<p>这是一条简单/规范的基本SQL。</p>
</blockquote>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol>
<li><p>SQL三个很重要的位置<strong>on/where/having</strong><br>它们分别对应着 <strong>join/from/group</strong> 形成后的虚表进行筛选。</p>
</li>
<li><p><strong>select</strong>部分并不是一开始就执行的，而是表数据确认完毕，只差排序的时候执行的。<br>并且select中的<strong>函数/DISTINCT/TOP</strong>也是在<strong>select</strong>执行阶段执行的</p>
</li>
<li><p><strong>聚合函数</strong>需Group后才可执行, <strong>普通函数</strong>随执行步骤执行(正常执行)</p>
</li>
</ol>
<h3 id="具体顺序"><a href="#具体顺序" class="headerlink" title="具体顺序"></a>具体顺序</h3><ol>
<li>FROM FROM后面的表标识了这条语句要查询的数据源。和一些子句如，（1-J1）笛卡尔积，（1-J2）ON过滤，（1-J3）添加外部列，所要应用的对象。FROM过程之后会生成一个虚拟表VT1。<br>(1-J1)笛卡尔积 这个步骤会计算两个相关联表的笛卡尔积(CROSS JOIN) ，生成虚拟表VT1-J1。<br>(1-J2)ON过滤 这个步骤基于虚拟表VT1-J1这一个虚拟表进行过滤，过滤出所有满足ON 谓词条件的列，生成虚拟表VT1-J2。<br>(1-J3)添加外部行  如果使用了<code>外连接(外连接才会加入字段/数据)</code>，保留表中的不符合ON条件的列也会被加入到VT1-J2中，作为外部行，生成虚拟表VT1-J3。<code>此时 不符合ON的会被加入回来</code></li>
<li>WHERE 对VT1过程中生成的临时表进行过滤，满足where子句的列被插入到VT2表中。 <code>数据现在还没有被分组，因此现在你不能使用聚合运算-</code></li>
<li>GROUP BY 这个子句会把VT2中生成的表按照GROUP BY中的列进行分组。生成VT3表。<code>每一个分组必须只能返回一行(除非被过滤掉)，即每一行整体都无重复，对于没有出现GROUP BY后面的列必须使用聚合函数(如 MAX ,MIN,COUNT,AVG等)，保证每一个GROUP只返回一行</code></li>
<li>HAVING 这个子句对VT3表中的不同的组进行过滤，满足HAVING条件的子句被加入到VT4表中。</li>
<li>SELECT 这个子句对SELECT子句中的元素进行处理，生成VT5表。<br>(5-1)计算表达式 计算SELECT 子句中的表达式，生成VT5-1 <code>如果这个sql语句是一个聚合查询，在GROUP BY之后，你只能使用GROUP BY中的列，对不属于GROUP集合中的列必须使用聚合运算</code><br>(5-2)DISTINCT 寻找VT5-1中的重复列，并删掉，生成VT5-2<br>(5-3)TOP 从ORDER BY子句定义的结果中，筛选出符合条件的列。生成VT5-3表</li>
<li>ORDER BY 从VT5-3中的表中，根据ORDER BY 子句的条件对结果进行排序，生成VC6表。<code>唯一一个可以使用SELECT子句创建的别名的地方</code></li>
</ol>
<blockquote>
<p><strong>聚合函数</strong>是对一组值执行计算并返回单一的值的函数</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> C.customerid, <span class="keyword">COUNT</span>(O.orderid) <span class="keyword">AS</span> numorders</div><div class="line"><span class="keyword">FROM</span> dbo.Customers <span class="keyword">AS</span> C</div><div class="line">  <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dbo.Orders <span class="keyword">AS</span> O</div><div class="line">    <span class="keyword">ON</span> C.customerid = O.customerid</div><div class="line"><span class="keyword">WHERE</span> C.city = <span class="string">'Madrid'</span></div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> C.customerid</div><div class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(O.orderid)</div></pre></td></tr></table></figure>
<h2 id="关于-表-Joins"><a href="#关于-表-Joins" class="headerlink" title="关于 表 Joins"></a>关于 表 Joins</h2><blockquote>
<p> Joins 子句用于结合两个或多个数据库中表的记录, 也就是说是<strong>通过某种联系建立表之间的关联, 并形成一张新表</strong></p>
</blockquote>
<h3 id="SQL-定义了三种主要类型的连接"><a href="#SQL-定义了三种主要类型的连接" class="headerlink" title="SQL 定义了三种主要类型的连接"></a>SQL 定义了三种主要类型的连接</h3><ul>
<li><p>交叉连接 ( <strong>CROSS JOIN</strong> ), 又称 <strong>笛卡尔积</strong></p>
<blockquote>
<p>会形成庞大的表, 因此慎用。<br><strong>假设:</strong> 表t1(5行数据, 3列), 表t2(4行数据, 2列)<br><strong>SQL:</strong> select <em> from t1 cross join t2<br><strong>结果:</strong> 数据数量为20行数据(5 </em> 4), 5列</p>
</blockquote>
</li>
<li><p>内连接 ( <strong>INNER JOIN</strong> ), 通常可省略 <code>inner</code></p>
<blockquote>
<p>通过 <code>on</code> 或 <code>where</code> 建立表之间的联系或者说<strong>表形成的条件</strong><br><strong>假设:</strong> 表t1(5行数据, 3列), 表t2(4行数据, 2列)<br><strong>SQL:</strong> select <em> from t1 inner join t2 on t1.sid = t2.sid<br><em>*结果:</em></em> 查询操作列出与连接条件匹配的数据行, 5列</p>
</blockquote>
</li>
<li><p>外连接 ( <strong>OUTER JOIN</strong> )</p>
<blockquote>
<p>外连接为内连接的扩展, 主要区别在于哪边为基准, 使用 <code>on</code> 进行数据关联<br>外连接分为: <code>左外连接</code>、<code>右外连接</code>、<code>全外连接</code><br>部分SQL语言并不包含全部种类, 例如<br>SQLite 之包含 <strong>左外连接</strong></p>
<ul>
<li>左外连接 ( <strong>LEFT JOIN</strong> )<br><strong>假设:</strong> 表t1(5行数据, 3列), 表t2(4行数据, 2列)<br><strong>SQL:</strong> select <em> from t1 left join t2 on t1.sid = t2.sid<br><em>*结果:</em></em> 以左表为基准, 将数据按条件进行连接, 左表行全部显示, 若右表没有满足条件的行则显示为NULL, 5列</li>
</ul>
</blockquote>
<ul>
<li><p>右外连接 ( <strong>RIGHT JOIN</strong> )</p>
<blockquote>
<p><strong>假设:</strong> 表t1(5行数据, 3列), 表t2(4行数据, 2列)<br><strong>SQL:</strong> select <em> from t1 right join t2 on t1.sid = t2.sid<br><em>*结果:</em></em> 以右表为基准, 将数据按条件进行连接, 右表行全部显示, 若左表没有满足条件的行则显示为NULL, 5列</p>
</blockquote>
</li>
<li><p>全外连接 ( <strong>FULL JOIN</strong> )</p>
<blockquote>
<p><strong>假设:</strong> 表t1(5行数据, 3列), 表t2(4行数据, 2列)<br><strong>SQL:</strong> select <em> from t1 full join t2 on t1.sid = t2.sid<br><em>*结果:</em></em> 完整的显示两表的数据, 将数据按条件进行连接, 当没有被关联的表中没有存在满足条件的行时, 则显示为NULL, 5列</p>
</blockquote>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;持续积累..&lt;br&gt;
    
    </summary>
    
      <category term="Server" scheme="https://hocg.in/categories/Server/"/>
    
    
      <category term="Tips" scheme="https://hocg.in/tags/Tips/"/>
    
      <category term="SQL" scheme="https://hocg.in/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js项目 部件简介 (未完待续)</title>
    <link href="https://hocg.in/2017/03/31/Vue.js%E9%A1%B9%E7%9B%AE-%E9%83%A8%E4%BB%B6%E7%AE%80%E4%BB%8B/"/>
    <id>https://hocg.in/2017/03/31/Vue.js项目-部件简介/</id>
    <published>2017-03-31T07:32:36.000Z</published>
    <updated>2017-03-31T13:15:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>🦋 目前国内前端MVVM最火的框架.. 前段时间写了一个<a href="https://github.com/hocgin/iPage" target="_blank" rel="external">About页面</a>, 这几天顺带整理一下知识点.<br><a id="more"></a></p>
<h1 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h1><blockquote>
<p>Vue.js是当下很火的一个JavaScript MVVM库，它是以数据驱动和组件化的思想构建的.<br>类似的有<code>Angular.js</code>.</p>
</blockquote>
<ul>
<li>可以建立DOM和数据之间的绑定</li>
<li>可以按功能/组件抽离HTML代码</li>
</ul>
<p><strong>相关</strong><br><a href="http://hocg.in/2017/03/26/Vue.js-%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5">Vue 项目实践 - 持续更新</a></p>
<h2 id="功能部分"><a href="#功能部分" class="headerlink" title="功能部分"></a>功能部分</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ul>
<li>数值默认双向绑定</li>
<li>支持 条件语法特性/功能函数/生命周期</li>
<li>动态设定<code>style</code>/<code>class</code></li>
<li>捆绑<code>event</code></li>
<li>渲染生命周期<h3 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h3></li>
<li>单页面组件</li>
<li>自定义指令</li>
<li>单元测试</li>
<li>插件</li>
</ul>
<h2 id="单文件组件-vue"><a href="#单文件组件-vue" class="headerlink" title="单文件组件.vue"></a>单文件组件<code>.vue</code></h2><p><strong>定义:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></div><div class="line"><span class="javascript">    name: <span class="string">'Title'</span></span></div><div class="line"><span class="undefined">  &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>使用:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./assets/logo.png"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">Title</span>&gt;</span><span class="tag">&lt;/<span class="name">Title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">  <span class="keyword">import</span> Title <span class="keyword">from</span> <span class="string">'./components/Title'</span></span></div><div class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></div><div class="line"><span class="javascript">    name: <span class="string">'app'</span>,</span></div><div class="line"><span class="undefined">    components: &#123;</span></div><div class="line"><span class="undefined">      Title</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h1 id="Vue-Router"><a href="#Vue-Router" class="headerlink" title="Vue Router"></a>Vue Router</h1><blockquote>
<p>扩展 Vue<br>按字面意思来看为<code>Vue 路由</code><br>其实质也就是用于<strong>单页应用</strong>管理页面跳转, 负责路径解析.</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></div><div class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></div><div class="line"><span class="keyword">import</span> Hello <span class="keyword">from</span> <span class="string">'@/components/Hello'</span></div><div class="line"></div><div class="line">Vue.use(Router)</div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</div><div class="line">  routes: [</div><div class="line">    &#123;</div><div class="line">      path: <span class="string">'/'</span>,</div><div class="line">      name: <span class="string">'Hello'</span>,</div><div class="line">      component: Hello</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h1 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h1><blockquote>
<p>扩展 Vue<br>当开发大型项目时, 为防止 Vue 太过臃肿, 使用 Vuex 管理数据状态.</p>
</blockquote>
<h1 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h1><blockquote>
<p>一款模块加载器兼打包工具<br>使用模块的理念来处理 JS/CSS/图片等资源文件</p>
</blockquote>
<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 安装</div><div class="line">npm install webpack --save-dev</div><div class="line"><span class="meta">#</span> 执行</div><div class="line">webpack</div><div class="line">   --display-error-details # 输出详细错误</div><div class="line">   --watch # 实时监听并自动打包</div><div class="line">   --config &lt;file&gt; # 指定配置文件打包</div><div class="line">   -p # 压缩打包</div><div class="line">   -d # 生成map映射文件</div></pre></td></tr></table></figure>
<h2 id="配置-webpack-config-js"><a href="#配置-webpack-config-js" class="headerlink" title="配置(webpack.config.js)"></a>配置(webpack.config.js)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  <span class="comment">// 插件</span></div><div class="line">  plugins: [],</div><div class="line">  <span class="comment">// 页面入口</span></div><div class="line">  entry: &#123;&#125;,</div><div class="line">  <span class="comment">// 入口文件输出位置, 即处理后的文件存放位置</span></div><div class="line">  output: &#123;&#125;,</div><div class="line">  <span class="built_in">module</span>: &#123;</div><div class="line">    <span class="comment">// 文件处理加载器</span></div><div class="line">    rules: []</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// 额外处理</span></div><div class="line">  resolve: &#123;</div><div class="line">    <span class="comment">// 自动扩展文件后缀, require时可以进行省略</span></div><div class="line">    extensions: [],</div><div class="line">    <span class="comment">// 模块定义别名, require时可以进行路径省略, 直接使用别名</span></div><div class="line">    alias: &#123;&#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="入口文件-main-js"><a href="#入口文件-main-js" class="headerlink" title="入口文件(main.js)"></a>入口文件(main.js)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></div><div class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></div><div class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></div><div class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store/index'</span></div><div class="line"><span class="comment">// 引入js, 加载器会自动进行处理</span></div><div class="line"><span class="keyword">import</span> holderjs <span class="keyword">from</span> <span class="string">'holderjs'</span></div><div class="line"><span class="comment">// 引入 css/scss, 加载器会自动进行处理</span></div><div class="line"><span class="keyword">import</span> appScss <span class="keyword">from</span> <span class="string">'./assets/app.scss'</span></div><div class="line"><span class="keyword">import</span> fontAwesomeCss <span class="keyword">from</span> <span class="string">'./assets/font-awesome-4.7.0/css/font-awesome.css'</span></div><div class="line"></div><div class="line">Vue.config.productionTip = <span class="literal">false</span></div><div class="line"></div><div class="line"><span class="comment">/* eslint-disable no-new */</span></div><div class="line"><span class="keyword">new</span> Vue(&#123;</div><div class="line">  el: <span class="string">'#app'</span>,</div><div class="line">  router,</div><div class="line">  store,</div><div class="line">  template: <span class="string">'&lt;App/&gt;'</span>,</div><div class="line">  components: &#123; App &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<blockquote>
<p>未完待续ing</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;🦋 目前国内前端MVVM最火的框架.. 前段时间写了一个&lt;a href=&quot;https://github.com/hocgin/iPage&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;About页面&lt;/a&gt;, 这几天顺带整理一下知识点.&lt;br&gt;
    
    </summary>
    
      <category term="Coder" scheme="https://hocg.in/categories/Coder/"/>
    
    
      <category term="HTML5" scheme="https://hocg.in/tags/HTML5/"/>
    
      <category term="JavaScript" scheme="https://hocg.in/tags/JavaScript/"/>
    
      <category term="前端" scheme="https://hocg.in/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Vue 项目实践 - 持续更新</title>
    <link href="https://hocg.in/2017/03/26/Vue.js-%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5/"/>
    <id>https://hocg.in/2017/03/26/Vue.js-项目实践/</id>
    <published>2017-03-26T07:40:08.000Z</published>
    <updated>2017-06-01T13:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>🐌 目前国内前端MVVM最火的框架.. 项目实践记录一些流程<br><a id="more"></a></p>
<h1 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h1><ul>
<li>vue<ul>
<li>vue-router <code>给vue使用的路由</code></li>
<li>vuex <code>一个专为 Vue.js 应用程序开发的状态管理模式</code></li>
</ul>
</li>
<li>webpack</li>
</ul>
<h1 id="快速搭建项目"><a href="#快速搭建项目" class="headerlink" title="快速搭建项目"></a>快速搭建项目</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 构建项目</div><div class="line">npm install -g vue-cli</div><div class="line">vue init webpack &lt;project-name&gt;</div><div class="line"><span class="meta">#</span> 试行</div><div class="line">cd iPage</div><div class="line">npm install</div><div class="line">npm run dev</div><div class="line"></div><div class="line"><span class="meta">#</span> 安装 vuex</div><div class="line">npm install vuex -S</div><div class="line"></div><div class="line"><span class="meta">#</span> 安装 sass 开发支持</div><div class="line">npm install --save-dev sass-loader</div><div class="line">npm install --save-dev node-sass</div><div class="line">npm install --save-dev css-loader</div><div class="line">npm install --save-dev style-loader</div><div class="line"></div><div class="line"><span class="meta">#</span> 编译生成静态文件</div><div class="line">npm run build</div></pre></td></tr></table></figure>
<h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">.  </div><div class="line">├── README.md  </div><div class="line">├── build  </div><div class="line">├── config   </div><div class="line">├── index.html  </div><div class="line">├── node_modules  </div><div class="line">├── package.json  </div><div class="line">├── src // 源码</div><div class="line">|    ├── App.vue    // 父组件  </div><div class="line">|    ├── assets     // 静态文件  </div><div class="line">|    ├── components // 公共组件  </div><div class="line">|    ├── main.js    // webpack打包入口文件  </div><div class="line">|    └── router  </div><div class="line">|          └── index.js // 页面路由  </div><div class="line">├── static  </div><div class="line">└── test</div></pre></td></tr></table></figure>
<h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;🐌 目前国内前端MVVM最火的框架.. 项目实践记录一些流程&lt;br&gt;
    
    </summary>
    
      <category term="Coder" scheme="https://hocg.in/categories/Coder/"/>
    
    
      <category term="HTML5" scheme="https://hocg.in/tags/HTML5/"/>
    
      <category term="JavaScript" scheme="https://hocg.in/tags/JavaScript/"/>
    
      <category term="前端" scheme="https://hocg.in/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>关于 Objective-C 的小笔记</title>
    <link href="https://hocg.in/2017/03/20/%E5%85%B3%E4%BA%8E%20Objective-C%20%E7%9A%84%E5%B0%8F%E7%AC%94%E8%AE%B0/"/>
    <id>https://hocg.in/2017/03/20/关于 Objective-C 的小笔记/</id>
    <published>2017-03-20T00:07:00.000Z</published>
    <updated>2017-07-02T13:14:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前学 <code>swift3</code> 顺带整理的小笔记<br><a id="more"></a></p>
<h1 id="Objective-C"><a href="#Objective-C" class="headerlink" title="Objective-C"></a>Objective-C</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><table>
<thead>
<tr>
<th>文件后缀</th>
<th>文件类型</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>*.h</code></td>
<td><strong>头文件</strong>。头文件包含类，类型，函数和常数的声明。</td>
</tr>
<tr>
<td><code>*.m</code></td>
<td><strong>源代码文件</strong>。这是典型的源代码文件扩展名，可以包含 Objective-C 和 C 代码</td>
</tr>
<tr>
<td><code>*.mm</code></td>
<td><strong>源代码文件</strong>。带有这种扩展名的源代码文件，除了可以包含Objective-C和C代码以外还可以包含C++代码。仅在你的Objective-C代码中确实需要使用C++类或者特性的时候才用这种扩展名。</td>
</tr>
</tbody>
</table>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><table>
<thead>
<tr>
<th>关键词</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>#import</td>
<td>引入文件, 并确保相同的文件只会被包含一次</td>
</tr>
<tr>
<td>NSString* say = @”Hello World”</td>
<td>创建NSString对象</td>
</tr>
<tr>
<td>@interface/@implementation</td>
<td>objective-c 一个类是由:定义和实现来构成的, @interface 用于定义, @implementation用于实现细节.</td>
</tr>
<tr>
<td>@property与@synthesize</td>
<td>@property用于在@interface声明getter与setter函数, @synthesize用于在@implementation实现getter与setter函数, <br><strong>二者是搭配口味</strong><br><strong>高版本(Xcode4.5)可省略@synthesize</strong></td>
</tr>
</tbody>
</table>
<h2 id="基础框架"><a href="#基础框架" class="headerlink" title="基础框架"></a>基础框架</h2><h3 id=""><a href="#" class="headerlink" title=""></a><foundation foundation.h=""></foundation></h3><ul>
<li>它包括 NSArray，NSDictionary中的NSSet等扩展数据类型的列表。</li>
<li>它由一组丰富的操作文件的函数，字符串，等等。</li>
<li>URL处理它提供的功能，如日期格式，数据处理，错误处理等实用工具</li>
</ul>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="语法速读"><a href="#语法速读" class="headerlink" title="语法速读"></a>语法速读</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">/* 预处理(导包) */</div><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">/* 定义接口(继承:NSObject) */</div><div class="line">@interface SampleClass:NSObject</div><div class="line">- (void)sampleMethod;</div><div class="line">@end</div><div class="line"></div><div class="line">/* 实现接口(SampleClass) */</div><div class="line">@implementation SampleClass</div><div class="line"></div><div class="line">- (void)sampleMethod&#123;</div><div class="line">   NSLog(@&quot;Hello, World!</div><div class="line">&quot;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@end</div><div class="line"></div><div class="line"></div><div class="line">/* 主函数 */</div><div class="line">int main() &#123;</div><div class="line">   /* my first program in Objective-C */</div><div class="line">   SampleClass *sampleClass = [[SampleClass alloc]init];</div><div class="line"></div><div class="line">   /* - 调用函数</div><div class="line">   C: sampleClass.sampleMethod(args);</div><div class="line">   OC: [对象 函数名: 参数]</div><div class="line">    */</div><div class="line">   [sampleClass sampleMethod: args];</div><div class="line"></div><div class="line"></div><div class="line">   return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="类的语法"><a href="#类的语法" class="headerlink" title="类的语法"></a>类的语法</h3><blockquote>
<p>类分为: <strong>类的定义(.h)</strong> 和 <strong>类的实现(.m)</strong><br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/类的定义语法.jpg" alt="image"></p>
<h4 id="定义-h"><a href="#定义-h" class="headerlink" title="定义 ( *.h )"></a>定义 ( *.h )</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">@interface MyObject : NSObject</div><div class="line">&#123;</div><div class="line">    // 此处变量默认为受保护(protected)</div><div class="line">    int memberVar1; // 实体变量</div><div class="line">    id  memberVar2;</div><div class="line">&#125;</div><div class="line"></div><div class="line">+(return_type) class_method; // &quot;+&quot; 表示 类方法</div><div class="line"></div><div class="line">-(return_type) instance_method1; // &quot;-&quot; 表示 实例方法</div><div class="line">-(return_type) instance_method2: (int) p1;</div><div class="line">// 这里的调用方式为: [obj instance_method3: 1 andPar: 2];</div><div class="line">// andPar 相当于外部的另外一个别名</div><div class="line">-(return_type) instance_method3: (int) p1 andPar: (int) p2;</div><div class="line">@end</div></pre></td></tr></table></figure>
</blockquote>
<h4 id="实现-m"><a href="#实现-m" class="headerlink" title="实现 ( *.m )"></a>实现 ( *.m )</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">@implementation MyObject</div><div class="line">&#123;</div><div class="line">  // 此处变量为私有(private)</div><div class="line">  int memberVar3; //私有实体变量</div><div class="line">&#125;</div><div class="line"></div><div class="line">+(return_type) class_method &#123;</div><div class="line">    .... //method implementation</div><div class="line">&#125;</div><div class="line">-(return_type) instance_method1 &#123;</div><div class="line">     ....</div><div class="line">&#125;</div><div class="line">-(return_type) instance_method2: (int) p1 &#123;</div><div class="line">    ....</div><div class="line">&#125;</div><div class="line">-(return_type) instance_method3: (int) p1 andPar: (int) p2 &#123;</div><div class="line">    ....</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h4 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 注: alloc 与 init 都属于 NSObject 里的函数</div><div class="line">MyObject * my = [[MyObject alloc] init];</div><div class="line">// 无参构建, 也可采用以下方式 (Objective-C 2.0)</div><div class="line">MyObject * my = [MyObject new];</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>Note:</strong> { } 需如文这样标识, 才可表达出准确的语义, 读者自行领悟.</p>
</blockquote>
<h3 id="函数语法"><a href="#函数语法" class="headerlink" title="函数语法"></a>函数语法</h3><blockquote>
<p>函数分为: <strong>类函数</strong> 和 <strong>对象函数</strong><br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/函数的定义语法.jpg" alt="image"></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">// 如上</div><div class="line">// 定义语法: 范围标识 (返回值)函数名:外部形参别名:(参数类型) 形参名 外部形参别名:(参数类型) 形参名</div><div class="line">// 注: 第一个 外部形参别名 可省略</div><div class="line">- (void)insertObject:(id)anObject atIndex:(NSUInteger) index</div><div class="line">+ (void)insertObject:(id)anObject atIndex:(NSUInteger) index</div><div class="line"></div><div class="line">// 调用</div><div class="line">// 对象调用 [对象 函数名: 参数1 外部形参别名: 参数2]</div><div class="line">[obj insertObject: arg1 atIndex: arg2]</div><div class="line">// 类调用 [类名 函数名: 参数1 外部形参别名: 参数2]</div><div class="line">[Object insertObject: arg1 atIndex: arg2]</div><div class="line"></div><div class="line">// 注:) 类调用 和 对象调用 的形式是一样的</div></pre></td></tr></table></figure>
<h3 id="属性语法"><a href="#属性语法" class="headerlink" title="属性语法"></a>属性语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">@interface Person : NSObject</div><div class="line">&#123;</div><div class="line">/*</div><div class="line">相当于 @public 至 @private 之间的属性被暴露出去</div><div class="line">可通过实例直接访问, 例如: obj-&gt;name</div><div class="line">*/</div><div class="line">@public</div><div class="line">  NSString *name;</div><div class="line">@private</div><div class="line">  int age;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*</div><div class="line">  参考: http://justcoding.iteye.com/blog/1444548</div><div class="line">  使用范围: @interface, @protocol, @category</div><div class="line">  可声明特性:</div><div class="line">          读写属性：   （readwrite/readonly）</div><div class="line">          setter语意：（assign/retain/copy）</div><div class="line">          原子性：    （atomicity/nonatomic）</div><div class="line">  使用效果(声明一个setter与getter方法):</div><div class="line">    - (NSString*)name;  </div><div class="line">    - (void)setName: (NSString*)newName;</div><div class="line"> */</div><div class="line">@property(copy) NSString *name;</div><div class="line">@property(readonly) int age;</div><div class="line"></div><div class="line">-(id)initWithAge:(int)age;</div><div class="line"></div><div class="line">@end</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">@implementation Person</div><div class="line">/*</div><div class="line">  使用范围: @implementation</div><div class="line">  使用效果(自动实现一个setter与getter方法):</div><div class="line">    - (NSString*)name &#123;</div><div class="line">      return name;</div><div class="line">    &#125;  </div><div class="line">    - (void)setName: (NSString*)newName &#123;</div><div class="line">      name = newName;</div><div class="line">    &#125;</div><div class="line"> */</div><div class="line">@synthesize name;</div><div class="line">/* @dynamic 仅仅是告诉编译器这两个方法在运行期会有的，无需产生警告 */</div><div class="line">@dynamic age;</div><div class="line"></div><div class="line">-(id)initWithAge:(int)initAge</div><div class="line">&#123;</div><div class="line">    age = initAge; // 注意：直接赋给成员变量，而非属性</div><div class="line">    return self;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(int)age</div><div class="line">&#123;</div><div class="line">    return 29; // 注意：并非返回真正的年龄</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h4 id="类或协议的属性可以被动态的读取"><a href="#类或协议的属性可以被动态的读取" class="headerlink" title="类或协议的属性可以被动态的读取"></a>类或协议的属性可以被动态的读取</h4><blockquote>
<p>类似反射机制 , 略过..</p>
</blockquote>
<h3 id="快速枚举"><a href="#快速枚举" class="headerlink" title="快速枚举"></a>快速枚举</h3><blockquote>
<p>一种省内存的循环遍历 , 略过..</p>
</blockquote>
<h3 id="协议语法"><a href="#协议语法" class="headerlink" title="协议语法"></a>协议语法</h3><blockquote>
<p>类似 Java 中的接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">/*定义协议*/</div><div class="line">@protocol Locking</div><div class="line">- (void)lock;</div><div class="line">- (void)unlock;</div><div class="line">@end</div><div class="line">/*</div><div class="line">类的@interface 宣称使用 协议</div><div class="line">*/</div><div class="line">@interface SomeClass : SomeSuperClass &lt;Locking&gt;</div><div class="line">@end</div><div class="line">/*</div><div class="line">类的@implementation 实现 协议 细节</div><div class="line">*/</div><div class="line">@implementation SomeClass</div><div class="line">- (void)lock &#123;</div><div class="line">  // 实现lock方法...</div><div class="line">&#125;</div><div class="line">- (void)unlock &#123;</div><div class="line">  // 实现unlock方法...</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="动态类型"><a href="#动态类型" class="headerlink" title="动态类型"></a>动态类型</h3><blockquote>
<p>id 相当于 Java 中的 Object, 即 任意对象</p>
</blockquote>
<h3 id="类别-Category-语法"><a href="#类别-Category-语法" class="headerlink" title="类别 (Category) 语法"></a>类别 (Category) 语法</h3><blockquote>
<p>分类不仅可以增加类的方法，也可以代替原有的<strong>函数</strong>, <strong>并不能新增变量</strong><br>动态增加和替换函数, 强得一匹</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/*</div><div class="line">  说明: 定义扩展 Integer类 接口, 新增/覆盖 函数 showstars 与 showint</div><div class="line">  语法:</div><div class="line">    #import &quot;待扩展类接口文件.h&quot;</div><div class="line">    @interface 待扩展类(扩展类)</div><div class="line">      // 函数定义</div><div class="line">    @end</div><div class="line">*/</div><div class="line">#import &quot;Integer.h&quot;</div><div class="line">@interface Integer(Display)</div><div class="line">- (id) showstars;</div><div class="line">- (id) showint;</div><div class="line">@end</div><div class="line"></div><div class="line">/*</div><div class="line">  说明: 实现扩展 Integer类 接口, 新增/覆盖 函数 showstars 与 showint</div><div class="line">  语法:</div><div class="line">    #import &quot;扩展类接口文件.h&quot;</div><div class="line">    @implementation 待扩展类(扩展类)</div><div class="line">      // 函数实现</div><div class="line">    @end</div><div class="line">*/</div><div class="line">#import &quot;Display.h&quot;</div><div class="line">@implementation Integer(Display)</div><div class="line">- (id) showstars &#123;</div><div class="line">  ..</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (id) showint &#123;</div><div class="line">    ..</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
<p><strong>NOTE:</strong> 使用时需#import 待扩展类与扩展类的接口文件<strong>(.h)</strong></p>
<h2 id="划重点"><a href="#划重点" class="headerlink" title="划重点"></a>划重点</h2><ul>
<li><code>NSString*</code>/<code>NSObject*</code>等 表示对象</li>
<li><code>self</code> 某种程度相当于 <code>this</code></li>
<li>nil 基本上等同于 NULL</li>
<li>调用属性 self-&gt;name</li>
<li>一般(.h 存放<strong>@interface文件</strong>, .m 存放<strong>@implementation文件</strong>). 进行#import时, 只需#import .h文件</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前学 &lt;code&gt;swift3&lt;/code&gt; 顺带整理的小笔记&lt;br&gt;
    
    </summary>
    
      <category term="Mac" scheme="https://hocg.in/categories/Mac/"/>
    
    
      <category term="语法" scheme="https://hocg.in/tags/%E8%AF%AD%E6%B3%95/"/>
    
      <category term="Objective-C" scheme="https://hocg.in/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>PHP Laravel 快速入门</title>
    <link href="https://hocg.in/2017/03/01/PHP-laravel-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>https://hocg.in/2017/03/01/PHP-laravel-快速入门/</id>
    <published>2017-03-01T06:59:38.000Z</published>
    <updated>2017-03-08T07:01:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 框架 Laravel 搭建开始, 慢慢更新~ 😜😜😜😜<br><a id="more"></a></p>
<h1 id="Quit-Start"><a href="#Quit-Start" class="headerlink" title="Quit Start"></a>Quit Start</h1><p>一. 安装<code>composer</code>, 用于管理依赖</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 全局安装 macOS</div><div class="line">brew update</div><div class="line">brew tap josegonzalez/homebrew-php</div><div class="line">brew tap homebrew/versions</div><div class="line">brew install php55-intl</div><div class="line">brew install josegonzalez/php/composer</div></pre></td></tr></table></figure>
<p>二. 下载<code>laravel</code></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer global require "laravel/installer"</div></pre></td></tr></table></figure>
<p>三. 创建项目</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer create-project laravel/laravel --prefer-dist</div></pre></td></tr></table></figure>
<p>四. 关于如何使用<code>PhpStorm</code>  </p>
<blockquote>
<p>默认已经配置好PHP开发环境了!</p>
</blockquote>
<p>4.0.1 相关插件</p>
<ul>
<li>Laravel Plugin</li>
<li><strong>[Optional]</strong> PHP Annotations Plugin</li>
<li><strong>[Optional]</strong> Symfony2 Plugin</li>
</ul>
<p>4.1 配置<code>Composer</code></p>
<ul>
<li>右键项目根节点 -&gt; Composer -&gt; init composer, 配置<code>PHP解释器</code>和<code>Composer路径</code></li>
</ul>
<p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/874D3259-AB37-4EA4-BAAC-CA17674334C8.png" alt="image"></p>
<ul>
<li>右键项目根节点 -&gt; Composer -&gt; add dependency, 添加<code>barryvdh/laravel-ide-helper</code></li>
</ul>
<p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/2F36AE2A-A1A7-40D0-8668-26EB0038BBCE.png" alt="image"><br>或者</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer require barryvdh/laravel-ide-helper</div></pre></td></tr></table></figure>
<p>4.2 编辑<code>config/app.php</code>文件, 在<code>providers</code>节点下面添加<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/4761A0E6-27E9-4544-B379-DE897A42E24E.png" alt="image"></p>
<p>4.3 扩展命令工具</p>
<ul>
<li>Preferences -&gt; Tools -&gt; Command Line Tool Support</li>
</ul>
<p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/A84F6129-8F9E-4BC3-BAAA-D32FEFB7F1D5.png" alt="image"></p>
<p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/3C942985-0082-4675-BA3F-1FCC3A83CD2B.png" alt="image"></p>
<p><strong>使用</strong>: Tools -&gt; Run Command(⌘ + ⇧ + X)</p>
<p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/363F317B-FED9-40AE-A30A-84216A3A2721.png" alt="image"></p>
<p>4.4 配置 php-xdebug<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 检查是否安装php-xdebug</div><div class="line">php -m</div></pre></td></tr></table></figure></p>
<p>安装后，修改下php.ini把xdebug.so前的注释’;’去掉</p>
<p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/5157CD6B-FD07-4F82-9DE6-9E8BEA21D504.png" alt="image"></p>
<p>五. 配置启动<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/A1D8FA94-D5A1-46A6-AE09-B638BC4C5FCE.png" alt="image"></p>
<p>六. 配置Debug</p>
<p><img src="http://7xs6lq.com1.z0.glb.clouddn.com/03337E90-7562-498F-A595-98FEA679EDDE.png" alt="image"><br>并且在根目录加入<code>debug.ini</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">xdebug.remote_enable = On</div><div class="line">xdebug.remote_autostart = On</div><div class="line">upload_max_filesize = 1000M</div><div class="line">post_max_size = 1005M</div><div class="line">max_execution_time = 120</div><div class="line"></div><div class="line">;xdebug.profiler_enable = On</div><div class="line">;xdebug.profiler_enable_trigger = Off</div><div class="line">;xdebug.profiler_output_dir = ./xdebug</div><div class="line">;xdebug.profiler_aggregate = On</div><div class="line">;xdebug.profiler_append = On</div><div class="line">;xdebug.profiler_output_name = &quot;cachegrind.out.%R.%u.%p&quot;</div></pre></td></tr></table></figure>
<h1 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h1><p><a href="https://github.com/koomai/phpstorm-laravel-live-templates#requests--input" target="_blank" rel="external">Laravel Live Templates for PhpStorm</a><br><a href="https://laracasts.com/series/how-to-be-awesome-in-phpstorm/episodes/15" target="_blank" rel="external">Laravel 插件视频</a></p>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><ul>
<li><p>继承<br><code>@extends</code></p>
</li>
<li><p>存在替换<br><code>@yield(&#39;content&#39;)</code><br><code>@section</code><br><code>@endsection</code></p>
</li>
<li><p>增加<br><code>@stack(&quot;appendCSS&quot;)</code><br><code>@push(&#39;appendCSS&#39;)</code><br><code>@endpush</code></p>
</li>
<li><p>注入<br><code>@inject(&quot;xx&quot;, &quot;xx[Name]&quot;)</code></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PHP 框架 Laravel 搭建开始, 慢慢更新~ 😜😜😜😜&lt;br&gt;
    
    </summary>
    
      <category term="Server" scheme="https://hocg.in/categories/Server/"/>
    
    
      <category term="Mac" scheme="https://hocg.in/tags/Mac/"/>
    
      <category term="PHP" scheme="https://hocg.in/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 部署</title>
    <link href="https://hocg.in/2017/02/24/Nginx-%E9%83%A8%E7%BD%B2/"/>
    <id>https://hocg.in/2017/02/24/Nginx-部署/</id>
    <published>2017-02-24T01:12:22.000Z</published>
    <updated>2017-02-25T09:17:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>🎽  <a href="http://baike.baidu.com/link?url=6LDqhy3I7UWDkwOT6TS_s-d4Jsv9AVcA_yedSmd618s1BjJl-0NQ-roxjDF7jHazXWlTwbIHTv03_gWIWeRPUq" target="_blank" rel="external">Nginx</a> 是一个很强大的高性能Web和反向代理服务器<br><a id="more"></a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>OS: Ubuntu-16</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><ul>
<li><a href="http://www.pcre.org/" target="_blank" rel="external">PCRE</a></li>
<li><a href="http://zlib.net" target="_blank" rel="external">zlib</a></li>
<li><a href="nginx.org/en/download.html">nginx</a></li>
</ul>
<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>/opt<br>|– nginx-1.10.1<br>|– pcre-8.38<br>`– zlib-1.2.8</p>
<h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><blockquote>
<p>以下操作均在<code>/opt</code>目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> tar -zxvf nginx-1.10.1.tar.gz</div><div class="line"><span class="meta">#</span> cd nginx-1.10.1</div><div class="line"><span class="meta">#</span> ./configure</div></pre></td></tr></table></figure>
<p>ERROR:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">checking for OS</div><div class="line"> + Linux 2.6.32-042stab113.21 x86_64</div><div class="line">checking for C compiler ... not found</div><div class="line"></div><div class="line">./configure: error: C compiler cc is not found</div></pre></td></tr></table></figure></p>
<p>缺失编译部件, 解决办法如下:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> apt-get install build-essential libtool</div><div class="line"><span class="meta">#</span> ./configure</div></pre></td></tr></table></figure></p>
<p>Error:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">./configure: error: the HTTP rewrite module requires the PCRE library.</div><div class="line">You can either disable the module by using --without-http_rewrite_module</div><div class="line">option, or install the PCRE library into the system, or build the PCRE library</div><div class="line">statically from the source with nginx by using --with-pcre=&lt;path&gt; option.</div></pre></td></tr></table></figure></p>
<p>缺失<code>PCRE</code>, 移步官网下载(<code>顶部有链接</code>), 我是在<code>/opt</code>目录中解压<br><strong>注</strong>: pcre 没有 <code>2</code></p>
<blockquote>
<p>以下操作均在<code>/opt</code>目录  </p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> tar -jxvf pcre-8.38.tar.bz2</div><div class="line"><span class="meta">#</span> cd pcre-8.38</div><div class="line"><span class="meta">#</span> ./configure &amp;&amp; make &amp;&amp; make install</div></pre></td></tr></table></figure>
<p>回到<code>/opt/nginx-1.10.1</code>目录继续进行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> ./configure --with-pcre=/opt/pcre-8.38</div></pre></td></tr></table></figure></p>
<p>Error:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">./configure: error: the HTTP gzip module requires the zlib library.</div><div class="line">You can either disable the module by using --without-http_gzip_module</div><div class="line">option, or install the zlib library into the system, or build the zlib library</div><div class="line">statically from the source with nginx by using --with-zlib=&lt;path&gt; option.</div></pre></td></tr></table></figure></p>
<p>原因是缺失<code>zlib</code>,移步官网下载(<code>顶部有链接</code>), 同样是在<code>/opt</code>目录中解压</p>
<blockquote>
<p>以下操作均在<code>/opt</code>目录  </p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> tar -zxvf zlib-1.2.8.tar.gz</div><div class="line"><span class="meta">#</span> cd zlib-1.2.8</div><div class="line"><span class="meta">#</span> ./configure &amp;&amp; make &amp;&amp; make install</div></pre></td></tr></table></figure>
<p>回到<code>/opt/nginx-1.10.1</code>目录继续进行</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> ./configure --with-pcre=/opt/pcre-8.38 --with-zlib=/opt/zlib-1.2.8</div><div class="line"><span class="meta">#</span> make</div><div class="line"><span class="meta">#</span> make install</div></pre></td></tr></table></figure>
<p>至此，安装结束。可查看<code>ls /usr/local/nginx/</code>目录<br>显示如下文件:<br>/usr/local/nginx/<br><img src="http://7xs6lq.com1.z0.glb.clouddn.com/E3B25E4D-8D26-4E4D-BBA2-F77F7B089FA5.png" alt="image"></p>
<h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><blockquote>
<p>以下命令均在<code>/usr/local/nginx</code>目录下运行  </p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 启动</div><div class="line">./sbin/nginx</div><div class="line"><span class="meta">#</span> 检查配置</div><div class="line">./sbin/nginx -t</div><div class="line"><span class="meta">#</span> 重新加载配置</div><div class="line">./sbin/nginx -s reload</div><div class="line"><span class="meta">#</span> 查看配置文件</div><div class="line">cat ./conf/nginx.conf</div></pre></td></tr></table></figure>
<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><h3 id="nginx-conf配置"><a href="#nginx-conf配置" class="headerlink" title="nginx.conf配置"></a><code>nginx.conf</code>配置</h3><p><a href="http://blog.csdn.net/tjcyjd/article/details/50695922" target="_blank" rel="external">字段详解</a></p>
<h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><p><strong>待续ing</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;🎽  &lt;a href=&quot;http://baike.baidu.com/link?url=6LDqhy3I7UWDkwOT6TS_s-d4Jsv9AVcA_yedSmd618s1BjJl-0NQ-roxjDF7jHazXWlTwbIHTv03_gWIWeRPUq&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nginx&lt;/a&gt; 是一个很强大的高性能Web和反向代理服务器&lt;br&gt;
    
    </summary>
    
      <category term="Server" scheme="https://hocg.in/categories/Server/"/>
    
    
      <category term="Ubuntu" scheme="https://hocg.in/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>关于Chrome 插件开发的一些知识点</title>
    <link href="https://hocg.in/2017/02/04/%E5%85%B3%E4%BA%8EChrome%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://hocg.in/2017/02/04/关于Chrome插件开发的一些知识点/</id>
    <published>2017-02-04T05:20:51.000Z</published>
    <updated>2017-02-04T06:01:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>身为Chrome重度患者，生活和工作处处不离，这篇并不是入门教程，而是开发中的一些小Tip的记录.<br><a id="more"></a></p>
<h1 id="我开发的Chrome-插件"><a href="#我开发的Chrome-插件" class="headerlink" title="我开发的Chrome 插件"></a>我开发的Chrome 插件</h1><ul>
<li><a href="https://github.com/hocgin/Weather-For-Chrome-Plugin" target="_blank" rel="external">天气预报</a></li>
</ul>
<h1 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h1><ul>
<li>HTML5 <code>localStorage</code> <strong>存储在解析页面当前范围和网站共享localStorage</strong></li>
<li>Chrome API <code>chrome.storage</code> <strong>存储在系统磁盘，适合少量数据</strong></li>
<li>Web SQL Database <strong>存储在系统磁盘，适合大量数据</strong></li>
</ul>
<h1 id="脚本运行范围"><a href="#脚本运行范围" class="headerlink" title="脚本运行范围"></a>脚本运行范围</h1><ul>
<li>background <strong>安装插件后运行</strong></li>
<li>content_scripts <strong>在网页加载后引入到网站内</strong></li>
<li>html内导入的脚本 <strong>运行于该html页面</strong></li>
</ul>
<h1 id="Action-入口"><a href="#Action-入口" class="headerlink" title="Action 入口"></a>Action 入口</h1><ul>
<li>地址栏右侧图标外 <code>browser_action</code> <strong>可显示badge</strong></li>
<li>右键菜单 <code>chrome.contextMenus</code> <strong>可在<code>background</code>中创建</strong></li>
<li>地址栏右侧图标<del>内</del>外 <code>page_action</code> <strong>新版的已更改显示在外围 <a href="https://developer.chrome.com/extensions/pageAction" target="_blank" rel="external">PageAction API</a></strong></li>
<li>多功能框 <code>omnibox</code> <strong>对地址框进行监听</strong></li>
<li>overrides <strong>如, <code>管理书签</code>/<code>历史记录</code>/<code>新标签页</code>等 (一个扩展只能替换一个页面)</strong></li>
<li>桌面提醒 <code>webkitNotifications.createNotification</code></li>
</ul>
<h1 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h1><blockquote>
<p>相当一部分Chrome API 使用需要在<code>Manifest</code>申明权限</p>
</blockquote>
<h1 id="页面间通信"><a href="#页面间通信" class="headerlink" title="页面间通信"></a>页面间通信</h1><blockquote>
<p>eg: popup与<code>background</code>，可使用Chrome API <code>chrome.runtime</code></p>
</blockquote>
<h1 id="i18"><a href="#i18" class="headerlink" title="i18"></a>i18</h1><ul>
<li><code>CSS</code> __MSG_@@key</li>
<li><code>JS</code> chrome.i18n.getMessage(‘key’);</li>
</ul>
<h1 id="关于打包-amp-发布"><a href="#关于打包-amp-发布" class="headerlink" title="关于打包 &amp; 发布"></a>关于打包 &amp; 发布</h1><ol>
<li><code>扩展程序</code>中进行打包，生成<code>.crx</code>(扩展程序) &amp; <code>.pem</code>(秘钥<strong>重要</strong>)</li>
<li>前往<a href="https://chrome.google.com/webstore/developer/dashboard/" target="_blank" rel="external">Chrome 开发者中心</a> 认证<code>需支付5美元用于认证</code></li>
<li>把<code>.pem</code>更名为<code>key.pem</code>并放入<code>源码文件夹</code>中，打包为<code>.zip</code>文件</li>
<li>上传 并编辑 (<strong>必填 (扩展描述、ICON(128x128)、扩展截图(1280x800 or 640x400)、类别、语言)</strong>)</li>
</ol>
<hr>
<blockquote>
<p>如有遗漏或错误欢迎补充..</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;身为Chrome重度患者，生活和工作处处不离，这篇并不是入门教程，而是开发中的一些小Tip的记录.&lt;br&gt;
    
    </summary>
    
      <category term="IDE" scheme="https://hocg.in/categories/IDE/"/>
    
    
      <category term="HTML5" scheme="https://hocg.in/tags/HTML5/"/>
    
      <category term="Chrome" scheme="https://hocg.in/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>关于log4j报错</title>
    <link href="https://hocg.in/2017/01/16/%E5%85%B3%E4%BA%8Elog4j%E6%8A%A5%E9%94%99/"/>
    <id>https://hocg.in/2017/01/16/关于log4j报错/</id>
    <published>2017-01-16T00:09:27.000Z</published>
    <updated>2017-02-04T05:57:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>  Java开发中经常遇到日志<code>冲突</code>或者<code>异常</code>, 彻底的来此追根究底.<br><a id="more"></a></p>
<h2 id="日志历史"><a href="#日志历史" class="headerlink" title="日志历史"></a>日志历史</h2><ul>
<li>log4j</li>
<li>JCL + log4j</li>
<li>SLF4J <code>slf4j-XXX-version.jar</code> [XXX指代log4j12, jdk14, jcl, nop 等]</li>
<li>slf4j-api<blockquote>
<p>v1 <code>log4j</code> 早期直接实现日志打印<br>v2 <code>JCL + log4j</code> 动态绑定, 面向<code>JCL 接口</code>实现的<code>log4j</code><br>v3 <code>slf4j-api</code> 提供 <code>SLF4J接口</code> <strong>面向对象编程</strong><br><code>slf4j-XXX-version.jar</code> 对接口和指定<code>XXX</code>种类日志的具体实现</p>
</blockquote>
</li>
</ul>
<h2 id="slf4j-举例jar"><a href="#slf4j-举例jar" class="headerlink" title="slf4j 举例jar"></a>slf4j 举例jar</h2><ul>
<li>log4j-over-slf4j.jar 把<code>log4j</code>转为<code>slf4j</code></li>
<li>slf4j-log4j12.jar 以slf4j标准实现的log4j12</li>
<li><code>XXX-over-slf4j.jar</code> 把日志重定向到<code>slf4j</code> eg.<code>jcl-over-slf4j.jar</code></li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>即.<br>Component<br>   |<br>   | log to Apache Commons Logging<br>   V<br> jcl-over-slf4j.jar — (redirect) —&gt; SLF4j —&gt; slf4j-log4j12-version.jar —&gt; log4j.jar —&gt; 输出日志<br><strong>解释:</strong><br>JCL实现的重定向为SLF4J日志形式, 然后SLF4J转为Log4j12输出!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  Java开发中经常遇到日志&lt;code&gt;冲突&lt;/code&gt;或者&lt;code&gt;异常&lt;/code&gt;, 彻底的来此追根究底.&lt;br&gt;
    
    </summary>
    
      <category term="Coder" scheme="https://hocg.in/categories/Coder/"/>
    
    
      <category term="JAVA" scheme="https://hocg.in/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>Redis 相关</title>
    <link href="https://hocg.in/2016/10/20/Redis-%E7%9B%B8%E5%85%B3/"/>
    <id>https://hocg.in/2016/10/20/Redis-相关/</id>
    <published>2016-10-20T01:11:48.000Z</published>
    <updated>2017-08-24T09:48:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>  Redis 的部署和部位设计的实践, 还有常见问题的梳理! 💪<br><a id="more"></a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="http://redis.io/download" target="_blank" rel="external">官网</a></p>
<h2 id="详情"><a href="#详情" class="headerlink" title="详情"></a>详情</h2><h3 id="默认项"><a href="#默认项" class="headerlink" title="默认项"></a>默认项</h3><ul>
<li>端口 <code>6379</code></li>
</ul>
<h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>redis-3.2.4/<br>|– redis.conf <code>redis配置文件</code><br><code>-- src</code>编译后目录<code>|-- redis-server</code>启动bit文件<code>`-- redis-cli</code>终端bit文件`</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote>
<p>以下操作均在<code>/opt</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 下载</div><div class="line">wget http://download.redis.io/releases/redis-3.2.4.tar.gz</div><div class="line"><span class="meta">#</span> 解压</div><div class="line">tar -zxvf redis-3.2.4.tar.gz</div><div class="line">cd redis-3.2.4</div><div class="line"><span class="meta">#</span> 编译， 生成`src`目录</div><div class="line">make</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><blockquote>
<p>以下操作均在<code>/opt</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 默认配置运行</div><div class="line">./redis-3.2.4/src/redis-server</div><div class="line"><span class="meta">#</span> 指定配置文件运行</div><div class="line">./redis-3.2.4/src/redis-server [config file]</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="疑问？"><a href="#疑问？" class="headerlink" title="疑问？"></a>疑问？</h2><ul>
<li><p>如何使<code>redis</code>后台运行?</p>
<blockquote>
<p>更改配置文件, 找到<code>daemonize</code>字段,更改<code>no</code>为<code>yes</code>, 重启<code>redis</code> <strong>切记！要指定配置文件</strong></p>
</blockquote>
</li>
<li><p>如何更改<code>redis</code>默认<code>6379</code>端口?</p>
<blockquote>
<p>更改配置文件, 找到<code>port</code>字段,更改为指定端口, 重启<code>redis</code> <strong>切记！要指定配置文件</strong></p>
</blockquote>
</li>
<li><p>如何设置<code>redis</code>的验证密码?</p>
<blockquote>
<p>更改配置文件, 找到<code>requirepass</code>字段, 设置相应的验证密码, 重启<code>redis</code> <strong>切记！要指定配置文件</strong><br>由于增加了验证密码，因此客户端连接命令为<code>redis-cli –a [upassword]</code></p>
</blockquote>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  Redis 的部署和部位设计的实践, 还有常见问题的梳理! 💪&lt;br&gt;
    
    </summary>
    
      <category term="Server" scheme="https://hocg.in/categories/Server/"/>
    
    
      <category term="Tips" scheme="https://hocg.in/tags/Tips/"/>
    
      <category term="Redis" scheme="https://hocg.in/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 下的 Oh My ZSH!</title>
    <link href="https://hocg.in/2016/09/30/Ubuntu%E4%B8%8B%E7%9A%84OhMyZSH!/"/>
    <id>https://hocg.in/2016/09/30/Ubuntu下的OhMyZSH!/</id>
    <published>2016-09-30T08:18:09.000Z</published>
    <updated>2017-09-22T12:48:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>号称终极shell :)<br><a id="more"></a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="什么是zsh？"><a href="#什么是zsh？" class="headerlink" title="什么是zsh？"></a>什么是zsh？</h3><p>shell的一种,<code>cat /etc/shells</code>查看当前系统支持的shell</p>
<h3 id="相关Link"><a href="#相关Link" class="headerlink" title="相关Link"></a>相关Link</h3><p><a href="http://www.zhihu.com/question/21418449" target="_blank" rel="external">为什么说 zsh 是 shell 中的极品？</a></p>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>OS: Ubuntu 16.04 x86_64</p>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><ul>
<li><p>~/.zshrc <code>文件zsh配置文件</code></p>
<blockquote>
<ol>
<li>可用来更改<code>Theme</code></li>
<li>加载<code>Plugin</code></li>
</ol>
</blockquote>
</li>
<li><p>~/.oh-my-zsh <code>oh-my-zsh目录</code></p>
</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 安装zsh</div><div class="line"><span class="meta">$</span> sudo apt-get install zsh</div><div class="line"><span class="meta">#</span> 安装oh-my-zsh</div><div class="line"><span class="meta">$</span> sudo apt-get install wget git</div><div class="line"><span class="meta">$</span> wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</div><div class="line"><span class="meta">#</span> 替换zsh为系统shell</div><div class="line"><span class="meta">$</span> chsh -s /bin/zsh</div><div class="line"><span class="meta">#</span> 退出&amp;重新登入</div><div class="line"><span class="meta">$</span> exit</div><div class="line"><span class="meta">#</span> 查看是否成功</div></pre></td></tr></table></figure>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p><a href="">zsh.config</a></p>
<p><strong>注意</strong></p>
<ul>
<li>需更改<code>.oh-my-zsh</code>的目录</li>
</ul>
<h2 id="插件介绍"><a href="#插件介绍" class="headerlink" title="插件介绍"></a>插件介绍</h2><ul>
<li><code>git</code>;处于git项目下出现提示</li>
<li><p><code>autojump</code>; 目录自动提示, 需要<a href="git clone git://github.com/joelthelion/autojump.git">Linux 额外安装</a></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> ~/.bashrc 追加</div><div class="line">[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; . ~/.autojump/etc/profile.d/autojump.sh</div></pre></td></tr></table></figure>
</li>
<li><p><code>git</code>;处于git项目下出现提示</p>
</li>
<li><p><code>zsh-syntax-highlighting</code>;高亮可用命令</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> git clone git://github.com/jimmijj/zsh-syntax-highlighting ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting</div><div class="line">plugins=(zsh-syntax-highlighting)</div></pre></td></tr></table></figure>
</li>
<li><p><code>colored-man-pages</code>; 帮助文档高亮</p>
</li>
<li><code>colorize</code>;更多代码高亮</li>
<li><code>copydir</code>; 整个目录拷贝</li>
<li><code>command-not-found</code>;命令行智能提示</li>
<li><code>history</code>;查看输入历史</li>
<li><code>z</code>; <code>autojump</code>同类</li>
</ul>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ul>
<li>ys</li>
</ul>
<h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><ul>
<li>转换路径时可以省去cd命令，直接输入路径即可</li>
<li><code>d</code> 可以查看访问过的路径，然后输入数字就可以直接切换</li>
<li>输入不完整的路径/文件/命令，按下tab键可以出现提示，再按tab则可以实现路径补全</li>
<li>普通命令使用两次tab可进入选择模式， ctrl+f/b/n/p 可以向前后左右切换</li>
<li>kill + tab <code>强强强</code></li>
<li>alias -s xx=’xxx’ 快捷配置</li>
</ul>
<h2 id="相关设置"><a href="#相关设置" class="headerlink" title="相关设置"></a>相关设置</h2><blockquote>
<p>cat 代码高亮<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pip install Pygments</div><div class="line"><span class="meta">#</span> 增加以下alias</div><div class="line"><span class="meta">#</span> alias ccat='pygmentize -g'</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p><a href="https://github.com/hocgin/Gather/tree/master/oh-my-zsh" target="_blank" rel="external">Oh My ZSH!</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;号称终极shell :)&lt;br&gt;
    
    </summary>
    
      <category term="IDE" scheme="https://hocg.in/categories/IDE/"/>
    
    
      <category term="Tips" scheme="https://hocg.in/tags/Tips/"/>
    
      <category term="Ubuntu" scheme="https://hocg.in/tags/Ubuntu/"/>
    
      <category term="Oh My ZSH" scheme="https://hocg.in/tags/Oh-My-ZSH/"/>
    
  </entry>
  
  <entry>
    <title>Glup 自动化构建工具</title>
    <link href="https://hocg.in/2016/09/20/Glup-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"/>
    <id>https://hocg.in/2016/09/20/Glup-自动化构建工具/</id>
    <published>2016-09-20T00:10:29.000Z</published>
    <updated>2017-09-22T12:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>Gulp.js 是一个自动化构建工具 😜<br><a id="more"></a></p>
<h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p><a href="https://github.com/hocgin/Gulp-Scaffold" target="_blank" rel="external">Glup 整合</a></p>
<h2 id="Glup"><a href="#Glup" class="headerlink" title="Glup"></a>Glup</h2><blockquote>
<p>Glup用自动化构建工具增强你的工作流程！</p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> npm install gulp -g</div><div class="line"><span class="meta">$</span> npm install gulp --save-dev</div></pre></td></tr></table></figure>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ul>
<li>编译Sass (gulp-ruby-sass)</li>
<li>Autoprefixer (gulp-autoprefixer)</li>
<li>缩小化(minify)CSS (gulp-minify-css)</li>
<li>JSHint (gulp-jshint)</li>
<li>拼接 (gulp-concat)</li>
<li>丑化(Uglify) (gulp-uglify)</li>
<li>图片压缩 (gulp-imagemin)</li>
<li>即时重整(LiveReload) (gulp-livereload)</li>
<li>清理档案 (gulp-clean)</li>
<li>图片快取，只有更改过得图片会进行压缩 (gulp-cache)</li>
<li>更动通知 (gulp-notify)<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> npm install gulp-ruby-sass gulp-autoprefixer gulp-minify-css gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-clean gulp-notify gulp-rename gulp-livereload gulp-cache --save-dev</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Gulp.js 是一个自动化构建工具 😜&lt;br&gt;
    
    </summary>
    
      <category term="Coder" scheme="https://hocg.in/categories/Coder/"/>
    
    
      <category term="Tips" scheme="https://hocg.in/tags/Tips/"/>
    
      <category term="NodeJS" scheme="https://hocg.in/tags/NodeJS/"/>
    
      <category term="Ubuntu" scheme="https://hocg.in/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ngrok使用指南</title>
    <link href="https://hocg.in/2016/08/31/Ngrok%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>https://hocg.in/2016/08/31/Ngrok使用指南/</id>
    <published>2016-08-30T23:15:24.000Z</published>
    <updated>2017-02-04T05:39:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ngrok 是一款内部端口转发，对于微信类似的开发很有用的😆<br>可参照墙内(花生壳 or nat123)<br><a id="more"></a></p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><strong>编译环境:</strong><br><a href="https://storage.googleapis.com/golang/go1.4.1.linux-amd64.tar.gz" target="_blank" rel="external">Go 1.4.1 强烈建议</a><br>根域名: <code>web.hocg.in</code>,即生成的域名为<code>*.web.hocg.in</code><br>文件结构:<br>ngrok<br>  ├── bin<br>  │   └── ngrok.cfg<br>  ├── client.sh<br>  ├── code.sh<br>  └── server.sh<br><strong>部署环境:</strong><br>服务器OS: Ubuntu-15<br>客户端OS: Ubuntu-16</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="环境依赖及源码下载"><a href="#环境依赖及源码下载" class="headerlink" title="环境依赖及源码下载"></a>环境依赖及源码下载</h3><blockquote>
<p>以下命令根目录统一在<code>/opt</code></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 环境依赖</div><div class="line">sudo apt-get install build-essential golang mercurial git</div><div class="line"><span class="meta">#</span> 获取 ngrok 源码</div><div class="line">git clone https://github.com/tutumcloud/ngrok.git ngrok</div><div class="line">cd ngrok</div></pre></td></tr></table></figure>
<h3 id="生成证书-amp-amp-编译"><a href="#生成证书-amp-amp-编译" class="headerlink" title="生成证书 &amp;&amp; 编译"></a>生成证书 &amp;&amp; 编译</h3><blockquote>
<p>以下命令根目录统一在<code>/opt/ngrok</code></p>
</blockquote>
<p><code>code.sh</code>文件</p>
<blockquote>
<p>生成证书 &amp;&amp; 编译服务端<br><code>DOMAIN</code> 为配置的<code>根域名</code>, 用于签名.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span>!/bin/bash</div><div class="line">echo "开始清除.."</div><div class="line">rm -rf assets/client/tls/ngrokroot.crt</div><div class="line">rm -rf assets/server/tls/snakeoil.crt</div><div class="line">rm -rf assets/server/tls/snakeoil.key</div><div class="line">rm -rf device.*</div><div class="line">rm -rf rootCA.*</div><div class="line">DOMAIN=web.hocg.in</div><div class="line">echo "设置域名为[*.$DOMAIN]"</div><div class="line">echo "开始生成秘钥.."</div><div class="line">openssl genrsa -out rootCA.key 2048</div><div class="line">openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=$DOMAIN" -days 5000 -out rootCA.pem</div><div class="line">openssl genrsa -out device.key 2048</div><div class="line">openssl req -new -key device.key -subj "/CN=$DOMAIN" -out device.csr</div><div class="line">openssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000</div><div class="line"></div><div class="line">echo "开始迁移秘钥.."</div><div class="line">cp -rf rootCA.pem assets/client/tls/ngrokroot.crt</div><div class="line">cp -rf device.crt assets/server/tls/snakeoil.crt</div><div class="line">cp -rf device.key assets/server/tls/snakeoil.key</div><div class="line"></div><div class="line">echo "开始编译.."</div><div class="line">make release-server</div></pre></td></tr></table></figure>
<p><strong>客户端</strong></p>
<blockquote>
<p>前置条件: Go需先增加对这些平台交叉编译的支持</p>
</blockquote>
<ul>
<li>Windows<br>go的<code>src</code>目录  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GOOS=windows GOARCH=amd64 ./make.bash</div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>nginx</code>目录,编译<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GOOS=windows GOARCH=amd64 make release-client</div></pre></td></tr></table></figure></p>
<ul>
<li>macOS<br>go的<code>src</code>目录  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GOOS=darwin GOARCH=amd64 ./make.bash</div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>nginx</code>目录,编译<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GOOS=darwin GOARCH=amd64 make release-client</div></pre></td></tr></table></figure></p>
<ul>
<li>Linux<br><code>nginx</code>目录,编译<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make release-client</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p><code>ngrok.cfg</code>文件</p>
<blockquote>
<p><code>server_addr</code> 为配置的<code>根域名</code>， <code>4443</code>为默认端口</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">server_addr: web.hocg.in:4443</div><div class="line">trust_host_root_certs: false</div></pre></td></tr></table></figure>
<h3 id="运行文件"><a href="#运行文件" class="headerlink" title="运行文件"></a>运行文件</h3><p><code>server.sh</code>文件</p>
<blockquote>
<p>服务器运行<br><code>DOMAIN</code> 为配置的<code>根域名</code>.<br>注释的那一句用于后台运行</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span>!/bin/bash</div><div class="line"><span class="meta">#</span> $1 HTTP</div><div class="line"><span class="meta">#</span> $2 HTTPS</div><div class="line">killall ngrokd</div><div class="line">DOMAIN=web.hocg.in</div><div class="line"><span class="meta">#</span> nohup ./bin/ngrokd -domain="$DOMAIN" -httpAddr=":$1" -httpsAddr=":$2" &gt;/tmp/ngrok.log 2&gt;&amp;1 &amp;</div><div class="line">./bin/ngrokd -domain="$DOMAIN" -httpAddr=":$1" -httpsAddr=":$2"</div></pre></td></tr></table></figure>
<p><code>client.sh</code>文件</p>
<blockquote>
<p>客户端运行, default:linux<br>具体环境修改具体内容</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span>!/bin/bash</div><div class="line"><span class="meta">#</span> $1 Port</div><div class="line"><span class="meta">#</span> $2 domain</div><div class="line">./bin/ngrok -subdomain $2 -proto=http -config=./bin/ngrok.cfg $1</div></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote>
<p>若需变更域名, 需修改<code>code.sh</code>的<code>DOMAIN</code>、<code>server.sh</code>的<code>DOMAIN</code>与<code>./bin/ngrok.cfg</code>的<code>server_addr</code></p>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sh code.sh</div></pre></td></tr></table></figure>
<p><strong>成功</strong> 检查<code>ngrok/bin</code>文件夹是否存在<code>ngrok</code> and <code>ngrokd</code></p>
</blockquote>
<h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sh server.sh 8888 9999</div></pre></td></tr></table></figure>
<h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sh client.sh 8080 dm</div></pre></td></tr></table></figure>
<h3 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h3><p>访问:<code>http://dm.web.hocg.in:8888</code><br><img src="https://hocg.in/i/Ngrok使用指南.png" alt="image"></p>
<h2 id="重要"><a href="#重要" class="headerlink" title="重要"></a>重要</h2><h3 id="关于域名解析"><a href="#关于域名解析" class="headerlink" title="关于域名解析"></a>关于域名解析</h3><p>eg. <code>*.web.hocg.in</code><br>路径解析需配置<code>*.web</code> and <code>web</code> 两个A记录</p>
<h3 id="关于签名"><a href="#关于签名" class="headerlink" title="关于签名"></a>关于签名</h3><p>最好在同一环境进行<code>服务端</code>和<code>客户端</code>的编译</p>
<h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><ul>
<li>如何让服务端的<code>ngrok</code>后台运行<blockquote>
<p>正常的<code>nohup</code>或<code>&amp;</code>是无法使<code>ngrok</code>后台运行的<br>需使用<code>screen</code></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 安装</div><div class="line">\# apt-get install screen</div><div class="line"><span class="meta">#</span> 使用</div><div class="line">screen -S [命名] [需放入后台的命令]</div><div class="line"><span class="meta">#</span> 使用 ctrl+A+D 让其运行在后台</div><div class="line"><span class="meta">#</span> 查看screen 后台进程</div><div class="line">screen -ls</div><div class="line"><span class="meta">#</span> 重新连接后台进程</div><div class="line">screen -r [进程id]</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h2 id="可能遇到的异常"><a href="#可能遇到的异常" class="headerlink" title="可能遇到的异常"></a>可能遇到的异常</h2><ul>
<li>Go-1.2.1语言版本不支持<code>go version</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> github.com/gorilla/websocket</div><div class="line">src/github.com/gorilla/websocket/client.go:361: unknown tls.Config field 'GetCertificate' in struct literal</div><div class="line">src/github.com/gorilla/websocket/client.go:370: unknown tls.Config field 'ClientSessionCache' in struct literal</div><div class="line">src/github.com/gorilla/websocket/client.go:373: unknown tls.Config field 'CurvePreferences' in struct literal</div><div class="line">make: *** [client] Error 2</div></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="https://golang.org/doc/install?download=go1.7.linux-amd64.tar.gz" target="_blank" rel="external">官方Go-64的安装</a></p>
<ul>
<li>Go编译器找不到<code>go-bindata</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">GOOS="" GOARCH="" go get github.com/jteeuwen/go-bindata/go-bindata</div><div class="line">/bin/sh: 1: go: not found</div><div class="line">make: *** [bin/go-bindata] Error 127</div></pre></td></tr></table></figure>
</li>
</ul>
<ol>
<li><p>请注意配置好<code>GOROOT</code>和<code>GOPATH</code></p>
<blockquote>
<p><code>GOROOT</code>为安装GO的目录<br><code>GOPATH</code>自定义一个GO插件下载目录</p>
</blockquote>
</li>
<li><p>执行以下shell下载插件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">go get -u github.com/jteeuwen/go-bindata/...</div></pre></td></tr></table></figure>
</li>
</ol>
<p>END:)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ngrok 是一款内部端口转发，对于微信类似的开发很有用的😆&lt;br&gt;可参照墙内(花生壳 or nat123)&lt;br&gt;
    
    </summary>
    
      <category term="Server" scheme="https://hocg.in/categories/Server/"/>
    
    
      <category term="Ngrok" scheme="https://hocg.in/tags/Ngrok/"/>
    
      <category term="Tip" scheme="https://hocg.in/tags/Tip/"/>
    
  </entry>
  
</feed>
